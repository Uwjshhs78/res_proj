[{"sha":"a3400a89b7420c12fd6b7b988377503e666a22b5","node_id":"C_kwDOGNARItoAKGEzNDAwYTg5Yjc0MjBjMTJmZDZiN2I5ODgzNzc1MDNlNjY2YTIyYjU","commit":{"author":{"name":"Ivo","email":"teleivo@users.noreply.github.com","date":"2021-10-26T08:07:09Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-10-26T08:07:09Z"},"message":"chore: reduce docker build context (#9038)\n\n* chore: reduce docker build context\r\n\r\nevery time we run 'docker build' the docker client archives all files in\r\nthe build context and sends them to the daemon. for me these were ~\r\n4.63GB which probably depends on whether you ran a local maven build\r\nbefore or not.\r\n\r\nthis change reduces docker build context and thus speeds up the docker\r\nbuild start time but also the entire docker build as 'COPY . .' now only\r\ncopies what is actually needed for the build. this also impacts docker\r\ncache invalidation as previously any file that was added/changed would\r\ninvalidate the 'COPY . .' layer. That means files irrelevant to the\r\nbuild were causing the maven build to be repeated ~ 7 minutes for me.\r\n\r\nanother aspect that might not be relevant in this scenario (as its only\r\nconcerning the build stage) is security. secure tokens stored in\r\ngitignored files in this repo can be included in a docker image if not\r\nexcluded from the docker build context.\r\n\r\nHere are some stats with before/after timings/sizes. docker builds were\r\nrun with buildkit enabled 'DOCKER_BUILDKIT=1 docker build .'\r\n\r\ndocker build context load time/size\r\nbefore:\r\n => [internal] load build context 20.2s\r\n => => transferring context: 4.54GB\r\nafter:\r\n => [internal] load build context 0.7s\r\n => => transferring context: 55.43MB 0.7s\r\n\r\nCOPY . .\r\nbefore: 9.1s\r\nafter: 0.6s\r\n\r\nNote that the timings may vary for you and also on every run.\r\n\r\nFor more read https://codefresh.io/docker-tutorial/not-ignore-dockerignore-2/\r\n\r\n* chore: build image does not need latest package updates\r\n\r\nthe build image is temporary, thus not used in production. the build\r\ntools themselves are kept up to date with the latest official maven\r\nbuild image we use as the base. we can save ourselves the occasional\r\n~ 15 seconds in case this layer would need to be run.","tree":{"sha":"37390173223fe143adb519f03a3fe92ffac66fc9","url":"https://api.github.com/repos/radnov/dhis2-core/git/trees/37390173223fe143adb519f03a3fe92ffac66fc9"},"url":"https://api.github.com/repos/radnov/dhis2-core/git/commits/a3400a89b7420c12fd6b7b988377503e666a22b5","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhd7ctCRBK7hj4Ov3rIwAApcQIAIX93OuGa6gT4Qeld/pdi71F\npPBbgkXpaAThK+88GrkKEsfDSNuoxbfUeMGpjLrZjES1+U4gaF6d5wWU9bG/2+kB\nVHr8WEKeYgZcfdyYKUcFCLUKJ4T7Bcen+Y828mE2Ss7lX4TosJGyk/LIibb9/4Q2\nkMxcahMZ/5dcjUz/UMKvYgYF+ydNkvh+/0FFja/pK1i/+P3eOXlgR52EDyzsv0u6\n73dA1PeDvFfJLpnQHBgu62Mf+siLPuXwqCOu4IkE4EzpiIYVDxzqDpOePtfnvcKI\nnMVzolW4guC11Q9Dlsql/KHO9R7RYThfKjRHt8VR8LMcFqckmhB/o6duSkyYrbA=\n=ruNX\n-----END PGP SIGNATURE-----\n","payload":"tree 37390173223fe143adb519f03a3fe92ffac66fc9\nparent 5a6292b47fd7cee027d8837e3ae7f85b93f32be6\nauthor Ivo <teleivo@users.noreply.github.com> 1635235629 +0200\ncommitter GitHub <noreply@github.com> 1635235629 +0200\n\nchore: reduce docker build context (#9038)\n\n* chore: reduce docker build context\r\n\r\nevery time we run 'docker build' the docker client archives all files in\r\nthe build context and sends them to the daemon. for me these were ~\r\n4.63GB which probably depends on whether you ran a local maven build\r\nbefore or not.\r\n\r\nthis change reduces docker build context and thus speeds up the docker\r\nbuild start time but also the entire docker build as 'COPY . .' now only\r\ncopies what is actually needed for the build. this also impacts docker\r\ncache invalidation as previously any file that was added/changed would\r\ninvalidate the 'COPY . .' layer. That means files irrelevant to the\r\nbuild were causing the maven build to be repeated ~ 7 minutes for me.\r\n\r\nanother aspect that might not be relevant in this scenario (as its only\r\nconcerning the build stage) is security. secure tokens stored in\r\ngitignored files in this repo can be included in a docker image if not\r\nexcluded from the docker build context.\r\n\r\nHere are some stats with before/after timings/sizes. docker builds were\r\nrun with buildkit enabled 'DOCKER_BUILDKIT=1 docker build .'\r\n\r\ndocker build context load time/size\r\nbefore:\r\n => [internal] load build context 20.2s\r\n => => transferring context: 4.54GB\r\nafter:\r\n => [internal] load build context 0.7s\r\n => => transferring context: 55.43MB 0.7s\r\n\r\nCOPY . .\r\nbefore: 9.1s\r\nafter: 0.6s\r\n\r\nNote that the timings may vary for you and also on every run.\r\n\r\nFor more read https://codefresh.io/docker-tutorial/not-ignore-dockerignore-2/\r\n\r\n* chore: build image does not need latest package updates\r\n\r\nthe build image is temporary, thus not used in production. the build\r\ntools themselves are kept up to date with the latest official maven\r\nbuild image we use as the base. we can save ourselves the occasional\r\n~ 15 seconds in case this layer would need to be run."}},"url":"https://api.github.com/repos/radnov/dhis2-core/commits/a3400a89b7420c12fd6b7b988377503e666a22b5","html_url":"https://github.com/radnov/dhis2-core/commit/a3400a89b7420c12fd6b7b988377503e666a22b5","comments_url":"https://api.github.com/repos/radnov/dhis2-core/commits/a3400a89b7420c12fd6b7b988377503e666a22b5/comments","author":{"login":"teleivo","id":4661144,"node_id":"MDQ6VXNlcjQ2NjExNDQ=","avatar_url":"https://avatars.githubusercontent.com/u/4661144?v=4","gravatar_id":"","url":"https://api.github.com/users/teleivo","html_url":"https://github.com/teleivo","followers_url":"https://api.github.com/users/teleivo/followers","following_url":"https://api.github.com/users/teleivo/following{/other_user}","gists_url":"https://api.github.com/users/teleivo/gists{/gist_id}","starred_url":"https://api.github.com/users/teleivo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/teleivo/subscriptions","organizations_url":"https://api.github.com/users/teleivo/orgs","repos_url":"https://api.github.com/users/teleivo/repos","events_url":"https://api.github.com/users/teleivo/events{/privacy}","received_events_url":"https://api.github.com/users/teleivo/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"5a6292b47fd7cee027d8837e3ae7f85b93f32be6","url":"https://api.github.com/repos/radnov/dhis2-core/commits/5a6292b47fd7cee027d8837e3ae7f85b93f32be6","html_url":"https://github.com/radnov/dhis2-core/commit/5a6292b47fd7cee027d8837e3ae7f85b93f32be6"}]}]