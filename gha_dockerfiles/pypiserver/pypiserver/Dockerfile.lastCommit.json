[{"sha":"8306de15db9914b3769df27019ad3188371e2ffb","node_id":"MDY6Q29tbWl0MjEyMTQyMDo4MzA2ZGUxNWRiOTkxNGIzNzY5ZGYyNzAxOWFkMzE4ODM3MWUyZmZi","commit":{"author":{"name":"Matthew Planchard","email":"mplanchard@users.noreply.github.com","date":"2021-02-07T23:04:06Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-02-07T23:04:06Z"},"message":"Gunicorn/gevent docker, log fixes, cache busting (#371)\n\nUpdates the Docker configuration to use the gunicorn server with gevent\r\nworkers by default. Adds `waitress` to the docker container, so that if\r\nno server is specified, we will fall back to that rather than `wsgiref`.\r\n\r\nMaking this happen brought a few other issues to light, which are also\r\naddressed here.\r\n\r\n- Docker log output not immediately being flushed to stdout (#358):\r\n  resolved by setting the `PYTHONUNBUFFERED` env var to `t` in the\r\n  docker container\r\n- When the WSGIRef server is selected, its access logs are written\r\n  directly to stderr, rather than going through the logging machinery:\r\n  resolved by adding a new `WsgiHandler` class and passing in to\r\n  bottle's `run()` method when running the wsgi server. This required a\r\n  new `ServerCheck` class to determine whether the wsgi server is\r\n  selected when the `auto` option is used\r\n- When using `gunicorn` along with the watchdog cache, package uplaods\r\n  were not being picked up by the watcher. Updated the `add_package`\r\n  and `remove_package` methods on the `CachingFileBackend` to bust the\r\n  cache","tree":{"sha":"b3a46d33beaffbc7c037f37667a7bfe94754ff42","url":"https://api.github.com/repos/pypiserver/pypiserver/git/trees/b3a46d33beaffbc7c037f37667a7bfe94754ff42"},"url":"https://api.github.com/repos/pypiserver/pypiserver/git/commits/8306de15db9914b3769df27019ad3188371e2ffb","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgIHHmCRBK7hj4Ov3rIwAAdHIIAFyDVMJbam0Gyn3LHct87qgJ\nuTHBntKs5rHCGFTwYxdETHDJoN8SGNJ22187XLqOeQGnTUt8zJCfCqMqvjMfxlao\nni5E8zCvl1KlIh1nuQMiMBZoR5kFgY/+at6nyy5/UIkIwUhSsjoiVGn/ijoqIb+C\nlnmijZupsOlZ9hc+1LbUoYd0PT29w0OCXAcuDtjYTAkzMzHpEKJJjqxCLqyuPv2l\nOdwhECKzo/nC1uT/wN7NMLk0dYjmEB74riDVonbOj0NsAHhMMCf+blwUtg56eLkQ\nq/08tPNxrlzwngnBlueIiSwdoCzbcBQNn+CXTe+no7JQwMWIfneusYFljEECD10=\n=vbPw\n-----END PGP SIGNATURE-----\n","payload":"tree b3a46d33beaffbc7c037f37667a7bfe94754ff42\nparent d868005e1f3bb0708fdd85a430f592d74607949b\nauthor Matthew Planchard <mplanchard@users.noreply.github.com> 1612739046 -0600\ncommitter GitHub <noreply@github.com> 1612739046 -0600\n\nGunicorn/gevent docker, log fixes, cache busting (#371)\n\nUpdates the Docker configuration to use the gunicorn server with gevent\r\nworkers by default. Adds `waitress` to the docker container, so that if\r\nno server is specified, we will fall back to that rather than `wsgiref`.\r\n\r\nMaking this happen brought a few other issues to light, which are also\r\naddressed here.\r\n\r\n- Docker log output not immediately being flushed to stdout (#358):\r\n  resolved by setting the `PYTHONUNBUFFERED` env var to `t` in the\r\n  docker container\r\n- When the WSGIRef server is selected, its access logs are written\r\n  directly to stderr, rather than going through the logging machinery:\r\n  resolved by adding a new `WsgiHandler` class and passing in to\r\n  bottle's `run()` method when running the wsgi server. This required a\r\n  new `ServerCheck` class to determine whether the wsgi server is\r\n  selected when the `auto` option is used\r\n- When using `gunicorn` along with the watchdog cache, package uplaods\r\n  were not being picked up by the watcher. Updated the `add_package`\r\n  and `remove_package` methods on the `CachingFileBackend` to bust the\r\n  cache\r\n"}},"url":"https://api.github.com/repos/pypiserver/pypiserver/commits/8306de15db9914b3769df27019ad3188371e2ffb","html_url":"https://github.com/pypiserver/pypiserver/commit/8306de15db9914b3769df27019ad3188371e2ffb","comments_url":"https://api.github.com/repos/pypiserver/pypiserver/commits/8306de15db9914b3769df27019ad3188371e2ffb/comments","author":{"login":"mplanchard","id":6752481,"node_id":"MDQ6VXNlcjY3NTI0ODE=","avatar_url":"https://avatars.githubusercontent.com/u/6752481?v=4","gravatar_id":"","url":"https://api.github.com/users/mplanchard","html_url":"https://github.com/mplanchard","followers_url":"https://api.github.com/users/mplanchard/followers","following_url":"https://api.github.com/users/mplanchard/following{/other_user}","gists_url":"https://api.github.com/users/mplanchard/gists{/gist_id}","starred_url":"https://api.github.com/users/mplanchard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mplanchard/subscriptions","organizations_url":"https://api.github.com/users/mplanchard/orgs","repos_url":"https://api.github.com/users/mplanchard/repos","events_url":"https://api.github.com/users/mplanchard/events{/privacy}","received_events_url":"https://api.github.com/users/mplanchard/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"d868005e1f3bb0708fdd85a430f592d74607949b","url":"https://api.github.com/repos/pypiserver/pypiserver/commits/d868005e1f3bb0708fdd85a430f592d74607949b","html_url":"https://github.com/pypiserver/pypiserver/commit/d868005e1f3bb0708fdd85a430f592d74607949b"}]}]