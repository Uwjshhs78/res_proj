[{"sha":"542a02110f358f034192ddd1d7f218426ce54662","node_id":"MDY6Q29tbWl0MTM3OTQ2MTc3OjU0MmEwMjExMGYzNThmMDM0MTkyZGRkMWQ3ZjIxODQyNmNlNTQ2NjI=","commit":{"author":{"name":"jjpr-mit","email":"jjpr@mit.edu","date":"2020-09-03T14:14:52Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-09-03T14:14:52Z"},"message":"AWS configuration (#21)\n\n* Add config to use conda on EC2.\r\n\r\n* Elastic beanstalk commands for conda.\r\n\r\n* test basic command hooks\r\n\r\n* adding test commands\r\n\r\n* tweak commands\r\n\r\n* try \"commands\" hook\r\n\r\n* try Docker\r\n\r\n* Trying Docker instead of the AWS-configured python EC2 platform.  This gets to the point of having the conda environment built and accessible inside the container, but doesn't successfully start the webserver.  Need to investigate how ENTRYPOINT and CMD interact with the \"eb local run\" command from awsebcli.\r\n\r\n* conda keeps complaining about pip because they recently stopped bundling it with conda.\r\n\r\n* Every permutation of Dockerfile I've tried has some bug or other.\r\n\r\n* Docker image now loads the dependencies correctly.  Not copying directories from this repo correctly, investigating.\r\n\r\n* This version of the Dockerfile does seem to start the server.  Now have to set up database.\r\n\r\n* use environment settings for database when present\r\n\r\nfrom https://realpython.com/deploying-a-django-app-and-postgresql-to-aws-elastic-beanstalk/#configuring-a-database\r\n\r\n* Works with \"eb local run --port 80\".  Website comes up.  Must have db.sqlite3 in the directory.  Copies db into the container as a debugging solution, need to remove that before production.\r\n\r\n* Add sqlite for debugging.\r\n\r\n* Add to ALLOWED_HOSTS for testing.\r\n\r\n* Using postgres.\r\n\r\n* Use AWS Secrets Manager for database connection.\r\n\r\n* I think NAME for django is the database name, not the instance name.\r\n\r\n* Accidentally merged extra ALLOWED_HOSTS.\r\n\r\n* adding new email password\r\n\r\n* encourage citing data providers\r\n\r\n* formatting; add missing numpy import\r\n\r\n* use run_benchmarks job for submissions\r\n\r\nwas endpoint_copy\r\n\r\n* fix tqdm import\r\n\r\n* Moving password to secrets manager. (+7 squashed commits)\r\nSquashed commits:\r\n[5fe247f] Reload command failed, trying without it.\r\n[38d3f69] Got error:\r\nInvalid option value: 'sg-2cbe3d44' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'SecurityGroups'): The security group 'sg-2cbe3d44' does not exist\r\n[6970687] Attempt to automate elastic beanstalk configuration.\r\n[2083ee6] More logging.\r\n[533eff1] Add logging for email.\r\n[f5b22c6] Add logging for django.\r\n[1348f32] adding new email password\r\n\r\n* Adding immutable deployments so deployments don't get out of memory problems.\r\n\r\n* Moving some settings to environment configuration.\r\n\r\n* Comma not allowed in --envvars values.\r\n\r\n* Missed a comma.\r\n\r\n* Copy Martin's fix from b3886d77bfdd6bd0151bdd7b6cb37436f4bdb6de\r\n\r\n* Apparently DEBUG=False makes Django stop serving static files.  https://stackoverflow.com/questions/14043073/amazon-elastic-beanstalk-not-serving-django-static-files\r\n\r\n* The static files end up inside the container, and nginx lives outside the container.  There is no easy way to let nginx serve the static files.  The --insecure setting tells Django to serve the static files even though DEBUG=False.\r\n\r\n* I think migrations are supposed to be incremental like this.\r\n\r\n* I think 0002... is the correct incremental migration for the current delta between the code and the dev and prod databases.\r\n\r\n* Tests failing on missing dependency.\r\n\r\n* Django migration and pandas dependency.\r\n\r\n* Wrong key.\r\n\r\n* Files snuck into the merge.\r\n\r\n* Add ssh keys for admins.\r\n\r\n* Trying different keys.\r\n\r\n* The migrations are breaking Travis builds (I think) and we're not using them because we've been modifying the prod database by hand anyway.\r\n\r\n* Travis AWS keys.\r\n\r\n* New AWS key.\r\n\r\n* work around AWS authentication, use local dummies w/o credentials\r\n\r\n* set SECRET_KEY='dummy' by default\r\n\r\nCo-authored-by: Martin Schrimpf <m4rtinsch@gmail.com>","tree":{"sha":"e213bf6b90074a520b582a620517dacf50ba3191","url":"https://api.github.com/repos/brain-score/brain-score.web/git/trees/e213bf6b90074a520b582a620517dacf50ba3191"},"url":"https://api.github.com/repos/brain-score/brain-score.web/git/commits/542a02110f358f034192ddd1d7f218426ce54662","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfUPpcCRBK7hj4Ov3rIwAAdHIIAB18xM69MfvbDyRnJO7rjYdw\nt0YZ9AnUpCwcGOLIsF9l2OCmozqueFo4Vdm1fb49Aqxsj8WH/9At8AFUFK1RiDfq\nYZY9B01D4LaKh3ScyUoNYpSUW0IJaOnJ+mJJt6rOYMJx4kXP6No52puP68mDzN3n\nda6uqngpSXGVYrck38G4Zny75qChQIc9/GwewaQ3zB6IoTCqCEwYmce9Hbi6F7Pz\nUKGPwGfTJ/xHVjEchQaWLZc1KXjUwPQYgzX9jvQQsDhvekjGcnUqTDToOqDxfHOT\nA+g2y0Jox1RrXdunGLSQ0BW7fhOA6W8vQfwkPSwY8TJPHNqqnNcHS2cvn+EB+fs=\n=g2Km\n-----END PGP SIGNATURE-----\n","payload":"tree e213bf6b90074a520b582a620517dacf50ba3191\nparent 6b94cd6d79bca1bd5fb8b8bb6a3a3e83a9644486\nauthor jjpr-mit <jjpr@mit.edu> 1599142492 -0400\ncommitter GitHub <noreply@github.com> 1599142492 -0400\n\nAWS configuration (#21)\n\n* Add config to use conda on EC2.\r\n\r\n* Elastic beanstalk commands for conda.\r\n\r\n* test basic command hooks\r\n\r\n* adding test commands\r\n\r\n* tweak commands\r\n\r\n* try \"commands\" hook\r\n\r\n* try Docker\r\n\r\n* Trying Docker instead of the AWS-configured python EC2 platform.  This gets to the point of having the conda environment built and accessible inside the container, but doesn't successfully start the webserver.  Need to investigate how ENTRYPOINT and CMD interact with the \"eb local run\" command from awsebcli.\r\n\r\n* conda keeps complaining about pip because they recently stopped bundling it with conda.\r\n\r\n* Every permutation of Dockerfile I've tried has some bug or other.\r\n\r\n* Docker image now loads the dependencies correctly.  Not copying directories from this repo correctly, investigating.\r\n\r\n* This version of the Dockerfile does seem to start the server.  Now have to set up database.\r\n\r\n* use environment settings for database when present\r\n\r\nfrom https://realpython.com/deploying-a-django-app-and-postgresql-to-aws-elastic-beanstalk/#configuring-a-database\r\n\r\n* Works with \"eb local run --port 80\".  Website comes up.  Must have db.sqlite3 in the directory.  Copies db into the container as a debugging solution, need to remove that before production.\r\n\r\n* Add sqlite for debugging.\r\n\r\n* Add to ALLOWED_HOSTS for testing.\r\n\r\n* Using postgres.\r\n\r\n* Use AWS Secrets Manager for database connection.\r\n\r\n* I think NAME for django is the database name, not the instance name.\r\n\r\n* Accidentally merged extra ALLOWED_HOSTS.\r\n\r\n* adding new email password\r\n\r\n* encourage citing data providers\r\n\r\n* formatting; add missing numpy import\r\n\r\n* use run_benchmarks job for submissions\r\n\r\nwas endpoint_copy\r\n\r\n* fix tqdm import\r\n\r\n* Moving password to secrets manager. (+7 squashed commits)\r\nSquashed commits:\r\n[5fe247f] Reload command failed, trying without it.\r\n[38d3f69] Got error:\r\nInvalid option value: 'sg-2cbe3d44' (Namespace: 'aws:autoscaling:launchconfiguration', OptionName: 'SecurityGroups'): The security group 'sg-2cbe3d44' does not exist\r\n[6970687] Attempt to automate elastic beanstalk configuration.\r\n[2083ee6] More logging.\r\n[533eff1] Add logging for email.\r\n[f5b22c6] Add logging for django.\r\n[1348f32] adding new email password\r\n\r\n* Adding immutable deployments so deployments don't get out of memory problems.\r\n\r\n* Moving some settings to environment configuration.\r\n\r\n* Comma not allowed in --envvars values.\r\n\r\n* Missed a comma.\r\n\r\n* Copy Martin's fix from b3886d77bfdd6bd0151bdd7b6cb37436f4bdb6de\r\n\r\n* Apparently DEBUG=False makes Django stop serving static files.  https://stackoverflow.com/questions/14043073/amazon-elastic-beanstalk-not-serving-django-static-files\r\n\r\n* The static files end up inside the container, and nginx lives outside the container.  There is no easy way to let nginx serve the static files.  The --insecure setting tells Django to serve the static files even though DEBUG=False.\r\n\r\n* I think migrations are supposed to be incremental like this.\r\n\r\n* I think 0002... is the correct incremental migration for the current delta between the code and the dev and prod databases.\r\n\r\n* Tests failing on missing dependency.\r\n\r\n* Django migration and pandas dependency.\r\n\r\n* Wrong key.\r\n\r\n* Files snuck into the merge.\r\n\r\n* Add ssh keys for admins.\r\n\r\n* Trying different keys.\r\n\r\n* The migrations are breaking Travis builds (I think) and we're not using them because we've been modifying the prod database by hand anyway.\r\n\r\n* Travis AWS keys.\r\n\r\n* New AWS key.\r\n\r\n* work around AWS authentication, use local dummies w/o credentials\r\n\r\n* set SECRET_KEY='dummy' by default\r\n\r\nCo-authored-by: Martin Schrimpf <m4rtinsch@gmail.com>"}},"url":"https://api.github.com/repos/brain-score/brain-score.web/commits/542a02110f358f034192ddd1d7f218426ce54662","html_url":"https://github.com/brain-score/brain-score.web/commit/542a02110f358f034192ddd1d7f218426ce54662","comments_url":"https://api.github.com/repos/brain-score/brain-score.web/commits/542a02110f358f034192ddd1d7f218426ce54662/comments","author":{"login":"jjpr-mit","id":25231875,"node_id":"MDQ6VXNlcjI1MjMxODc1","avatar_url":"https://avatars.githubusercontent.com/u/25231875?v=4","gravatar_id":"","url":"https://api.github.com/users/jjpr-mit","html_url":"https://github.com/jjpr-mit","followers_url":"https://api.github.com/users/jjpr-mit/followers","following_url":"https://api.github.com/users/jjpr-mit/following{/other_user}","gists_url":"https://api.github.com/users/jjpr-mit/gists{/gist_id}","starred_url":"https://api.github.com/users/jjpr-mit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjpr-mit/subscriptions","organizations_url":"https://api.github.com/users/jjpr-mit/orgs","repos_url":"https://api.github.com/users/jjpr-mit/repos","events_url":"https://api.github.com/users/jjpr-mit/events{/privacy}","received_events_url":"https://api.github.com/users/jjpr-mit/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"6b94cd6d79bca1bd5fb8b8bb6a3a3e83a9644486","url":"https://api.github.com/repos/brain-score/brain-score.web/commits/6b94cd6d79bca1bd5fb8b8bb6a3a3e83a9644486","html_url":"https://github.com/brain-score/brain-score.web/commit/6b94cd6d79bca1bd5fb8b8bb6a3a3e83a9644486"}]}]