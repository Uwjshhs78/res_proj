[{"sha":"2e246e1083116481b31801e9594f4ed81e1ac33d","node_id":"MDY6Q29tbWl0MjI4OTM0MTUwOjJlMjQ2ZTEwODMxMTY0ODFiMzE4MDFlOTU5NGY0ZWQ4MWUxYWMzM2Q=","commit":{"author":{"name":"Giordano Salvador","email":"73959795+e3m3@users.noreply.github.com","date":"2021-05-10T23:10:45Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-05-10T23:10:45Z"},"message":"Canonicalize scripts (#264)\n\n* - 'install_deps.sh' now shows the help message when run with no\r\narguments\r\n- Updated help message in 'install_deps.sh'\r\n- New 'deps.sh' file tracking dependency directory configurations\r\n- 'Dockerfile' now defaults to 'Release' for cmake installs\r\n- 'Dockerfile' now accepts an 'ACTION' argument for Runner\r\n- 'Dockerfile' now defaults to Ubuntu 20.04\r\n- Manual or interactive ('install_deps.sh') script runs default to\r\n'RelWithDebInfo' for cmake installs\r\n- Removed 'temp_dir' from 'Dockerfile'\r\n- Updated 'GTEST_LOC' to generate from 'deps.sh' in 'common/common.mk'\r\n- New 'install_prompt' utility in 'install_deps.sh' for clearing old\r\ninstalls\r\n- Canonicalized install script structure (fetch -> build -> install)\r\n- Updated CUDA installation detection in 'scripts/install_apt_deps.sh'\r\n- Added dependency info logging and configuration loading (default to\r\n'.deps/')\r\n- Added '.deps' to '.gitignore'\r\n\r\n* Removed extra spacing in 'docs/debugging_illixr.md (#263)\r\n\r\n* Updates for CI (#263)\r\n\r\n- Moved GitHub workflows from Ubuntu 18.04 to 20.04\r\n- Added RAC for failing assert ('runtime/sqlite_record_logger.hpp')\r\n\r\n* Updated conda environment prompt in 'install_deps.sh' (#263)\r\n\r\n* Fixed existing dependency clearing (#263)\r\n\r\n- Changed 'rm --preserve-root=all' to 'rm --preserve-root' in\r\n'install_deps.sh'\r\n  - Unlike Ubuntu 20.04, 18.04's 'rm --preserve-root' does not accept\r\n  a value\r\n\r\n* Reverting to using system installed Eigen (#263)\r\n\r\n- Removed 'eigen' from 'Dockerfile'\r\n- Removed 'eigen' from 'scripts/install_apt_deps.sh'\r\n- Changed 'dep_ver_eigen' to '3.3.7' (matching Ubuntu 20.04 LTS)\r\n\r\n* Updated 'scripts/install_apt_deps.sh' (#263)\r\n\r\n- Added 'bc' as prerequisite dependency\r\n- Added 'pciutils' as prerequisite dependency ('lspci')\r\n- Moved prerequisites installation to before package setup\r\n\r\n* Setting cuda install to 11.1 (#263)\r\n\r\n* Distro detection for RealSense in 'scripts/install_apt_deps.sh' (#263)\r\n\r\n* Minor updates to 'docs/illixr_plugins.md' (#263)\r\n\r\n* Minor fixes (#263)\r\n\r\n- Moved 'deps' -> '.cache/deps'\r\n- Moved 'runner/environment.yml' -> '.cache/runner/environment.yml'\r\n- Removed CUDA from OpenCV build/install\r\n- Fixed type in 'docs/illixr_plugins.md'\r\n\r\n* Updating dependencies for Ubuntu 21 (#263)\r\n\r\n- New clang dependency (10.0.1)\r\n- New boost depdendecy (1.65.1)\r\n- Removed 'clang-10' from 'scripts/install_apt_deps.sh'\r\n- Removed 'libboost-all-dev' from 'scripts/install_apt_deps.sh'\r\n- Fixed deps configuraton detection\r\n- Fixed in conda environment creating in 'Dockerfile'\r\n\r\n* Updating install scripts (#263)\r\n\r\n- Made 'scripts/install_clang.sh' executable\r\n- Made 'scripts/install_boost.sh' executable\r\n- Added clang and boost to 'Dockerfile'\r\n- Fixed environment creation in 'install_deps.sh'\r\n\r\n* Fixed typo in 'scripts/install_clang.sh' (#263)\r\n\r\n* Fixed cmake call in 'scripts/install_clang.sh' (#263)\r\n\r\n* Using gcc to build in 'scripts/install_clang.sh' (#263)\r\n\r\n* Compiling dependencies with clang (#263)\r\n\r\n* Updated clang symlinks (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Moved environment back to 'runner/environment.yml' (#263)\r\n\r\n* Changing 'clang++-10' to 'clang++' (#263)\r\n\r\n* Finishing install script cleanup (#263)\r\n\r\n- Disabled boost installation (from source)\r\n- Disabled clang installation (from source)\r\n- New 'join_strings' utility in 'scripts/system_utils.sh'\r\n\r\nCo-authored-by: Giordano Salvador <73959795+e3m3@users.noreply.com>","tree":{"sha":"73b7c7e289e165952a213269e5b3c13c63e9f87a","url":"https://api.github.com/repos/ILLIXR/ILLIXR/git/trees/73b7c7e289e165952a213269e5b3c13c63e9f87a"},"url":"https://api.github.com/repos/ILLIXR/ILLIXR/git/commits/2e246e1083116481b31801e9594f4ed81e1ac33d","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmb11CRBK7hj4Ov3rIwAAY/wIAEyru+k5gIa0LJzsEePtJ+BW\n0VZ5fSgHoJ7mC2hBqKEuswx1d5zvJexPjitzJRHscI5Lb76HFTVaWbEQwcpqtBhP\nwaqa86G/qmas6eXxcSW6Fs+gQeG2BLtroMtcNL5QwKo8V1ETfTx+964pfAKWuDGV\nUARIwgnG0+9e7gG9l0SoFvYEi1+jFno4XLOnObKzPpkrZRNhkMQ59RFY4/LLoEfG\nzfX9mfo3esMjEu8Zw01w/MClDiF+hy9cBJ9IybwEgThEM3Dh5Kg3FVtOSHxfY8TF\ntc4EvhGt5vhTVRYVVFQFRcx7NeSEi6aFdgnwS7+RGwcLOW1t867cY372aOWmcBc=\n=v3eA\n-----END PGP SIGNATURE-----\n","payload":"tree 73b7c7e289e165952a213269e5b3c13c63e9f87a\nparent ade3d91aff2cd30445cae9505d659764fb92cfcd\nauthor Giordano Salvador <73959795+e3m3@users.noreply.github.com> 1620688245 -0400\ncommitter GitHub <noreply@github.com> 1620688245 -0500\n\nCanonicalize scripts (#264)\n\n* - 'install_deps.sh' now shows the help message when run with no\r\narguments\r\n- Updated help message in 'install_deps.sh'\r\n- New 'deps.sh' file tracking dependency directory configurations\r\n- 'Dockerfile' now defaults to 'Release' for cmake installs\r\n- 'Dockerfile' now accepts an 'ACTION' argument for Runner\r\n- 'Dockerfile' now defaults to Ubuntu 20.04\r\n- Manual or interactive ('install_deps.sh') script runs default to\r\n'RelWithDebInfo' for cmake installs\r\n- Removed 'temp_dir' from 'Dockerfile'\r\n- Updated 'GTEST_LOC' to generate from 'deps.sh' in 'common/common.mk'\r\n- New 'install_prompt' utility in 'install_deps.sh' for clearing old\r\ninstalls\r\n- Canonicalized install script structure (fetch -> build -> install)\r\n- Updated CUDA installation detection in 'scripts/install_apt_deps.sh'\r\n- Added dependency info logging and configuration loading (default to\r\n'.deps/')\r\n- Added '.deps' to '.gitignore'\r\n\r\n* Removed extra spacing in 'docs/debugging_illixr.md (#263)\r\n\r\n* Updates for CI (#263)\r\n\r\n- Moved GitHub workflows from Ubuntu 18.04 to 20.04\r\n- Added RAC for failing assert ('runtime/sqlite_record_logger.hpp')\r\n\r\n* Updated conda environment prompt in 'install_deps.sh' (#263)\r\n\r\n* Fixed existing dependency clearing (#263)\r\n\r\n- Changed 'rm --preserve-root=all' to 'rm --preserve-root' in\r\n'install_deps.sh'\r\n  - Unlike Ubuntu 20.04, 18.04's 'rm --preserve-root' does not accept\r\n  a value\r\n\r\n* Reverting to using system installed Eigen (#263)\r\n\r\n- Removed 'eigen' from 'Dockerfile'\r\n- Removed 'eigen' from 'scripts/install_apt_deps.sh'\r\n- Changed 'dep_ver_eigen' to '3.3.7' (matching Ubuntu 20.04 LTS)\r\n\r\n* Updated 'scripts/install_apt_deps.sh' (#263)\r\n\r\n- Added 'bc' as prerequisite dependency\r\n- Added 'pciutils' as prerequisite dependency ('lspci')\r\n- Moved prerequisites installation to before package setup\r\n\r\n* Setting cuda install to 11.1 (#263)\r\n\r\n* Distro detection for RealSense in 'scripts/install_apt_deps.sh' (#263)\r\n\r\n* Minor updates to 'docs/illixr_plugins.md' (#263)\r\n\r\n* Minor fixes (#263)\r\n\r\n- Moved 'deps' -> '.cache/deps'\r\n- Moved 'runner/environment.yml' -> '.cache/runner/environment.yml'\r\n- Removed CUDA from OpenCV build/install\r\n- Fixed type in 'docs/illixr_plugins.md'\r\n\r\n* Updating dependencies for Ubuntu 21 (#263)\r\n\r\n- New clang dependency (10.0.1)\r\n- New boost depdendecy (1.65.1)\r\n- Removed 'clang-10' from 'scripts/install_apt_deps.sh'\r\n- Removed 'libboost-all-dev' from 'scripts/install_apt_deps.sh'\r\n- Fixed deps configuraton detection\r\n- Fixed in conda environment creating in 'Dockerfile'\r\n\r\n* Updating install scripts (#263)\r\n\r\n- Made 'scripts/install_clang.sh' executable\r\n- Made 'scripts/install_boost.sh' executable\r\n- Added clang and boost to 'Dockerfile'\r\n- Fixed environment creation in 'install_deps.sh'\r\n\r\n* Fixed typo in 'scripts/install_clang.sh' (#263)\r\n\r\n* Fixed cmake call in 'scripts/install_clang.sh' (#263)\r\n\r\n* Using gcc to build in 'scripts/install_clang.sh' (#263)\r\n\r\n* Compiling dependencies with clang (#263)\r\n\r\n* Updated clang symlinks (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Fixing clang build/install (#263)\r\n\r\n* Moved environment back to 'runner/environment.yml' (#263)\r\n\r\n* Changing 'clang++-10' to 'clang++' (#263)\r\n\r\n* Finishing install script cleanup (#263)\r\n\r\n- Disabled boost installation (from source)\r\n- Disabled clang installation (from source)\r\n- New 'join_strings' utility in 'scripts/system_utils.sh'\r\n\r\nCo-authored-by: Giordano Salvador <73959795+e3m3@users.noreply.com>"}},"url":"https://api.github.com/repos/ILLIXR/ILLIXR/commits/2e246e1083116481b31801e9594f4ed81e1ac33d","html_url":"https://github.com/ILLIXR/ILLIXR/commit/2e246e1083116481b31801e9594f4ed81e1ac33d","comments_url":"https://api.github.com/repos/ILLIXR/ILLIXR/commits/2e246e1083116481b31801e9594f4ed81e1ac33d/comments","author":{"login":"e3m3","id":73959795,"node_id":"MDQ6VXNlcjczOTU5Nzk1","avatar_url":"https://avatars.githubusercontent.com/u/73959795?v=4","gravatar_id":"","url":"https://api.github.com/users/e3m3","html_url":"https://github.com/e3m3","followers_url":"https://api.github.com/users/e3m3/followers","following_url":"https://api.github.com/users/e3m3/following{/other_user}","gists_url":"https://api.github.com/users/e3m3/gists{/gist_id}","starred_url":"https://api.github.com/users/e3m3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/e3m3/subscriptions","organizations_url":"https://api.github.com/users/e3m3/orgs","repos_url":"https://api.github.com/users/e3m3/repos","events_url":"https://api.github.com/users/e3m3/events{/privacy}","received_events_url":"https://api.github.com/users/e3m3/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"ade3d91aff2cd30445cae9505d659764fb92cfcd","url":"https://api.github.com/repos/ILLIXR/ILLIXR/commits/ade3d91aff2cd30445cae9505d659764fb92cfcd","html_url":"https://github.com/ILLIXR/ILLIXR/commit/ade3d91aff2cd30445cae9505d659764fb92cfcd"}]}]