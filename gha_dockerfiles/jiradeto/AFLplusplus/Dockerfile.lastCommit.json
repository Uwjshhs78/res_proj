[{"sha":"67293b298d2f6146022ac7adebdf17aebf27bea7","node_id":"MDY6Q29tbWl0MjQzNjQyODA1OjY3MjkzYjI5OGQyZjYxNDYwMjJhYzdhZGViZGYxN2FlYmYyN2JlYTc=","commit":{"author":{"name":"van Hauser","email":"vh@thc.org","date":"2021-05-30T00:06:05Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-05-30T00:06:05Z"},"message":"final push to stable (really?) (#939)\n\n* sync (#886)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* moved custom_mutator examples\r\n\r\n* unicorn speedtest makefile cleanup\r\n\r\n* fixed example location\r\n\r\n* fix qdbi\r\n\r\n* update util readme\r\n\r\n* Frida persistent (#880)\r\n\r\n* Added x64 support for persistent mode (function call only), in-memory teest cases and complog\r\n\r\n* Review changes, fix NeverZero and code to parse the .text section of the main executable. Excluded ranges TBC\r\n\r\n* Various minor fixes and finished support for AFL_INST_LIBS\r\n\r\n* Review changes\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* fix frida mode\r\n\r\n* Integer overflow/underflow fixes in libdislocator (#889)\r\n\r\n* libdislocator: fixing integer overflow in 'max_mem' variable and setting 'max_mem' type to 'size_t'\r\n\r\n* libdislocator: fixing potential integer underflow in 'total_mem' variable due to its different values in different threads\r\n\r\n* Bumped warnings up to the max and fixed remaining issues (#890)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* frida mode - support non-pie\r\n\r\n* nits\r\n\r\n* nit\r\n\r\n* update grammar mutator\r\n\r\n* Fixes for aarch64, OSX and other minor issues (#891)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* nits\r\n\r\n* fix PCGUARD, build aflpp_driver with fPIC\r\n\r\n* Added representative fuzzbench test and test for libxml (#893)\r\n\r\n* Added representative fuzzbench test and test for libxml\r\n\r\n* Added support for building FRIDA from source with FRIDA_SOURCE=1\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* update changelog\r\n\r\n* typos\r\n\r\n* fixed potential double free in custom trim (#881)\r\n\r\n* error handling, freeing mem\r\n\r\n* frida: complog -> cmplog\r\n\r\n* fix statsd writing\r\n\r\n* let aflpp_qemu_driver_hook.so build fail gracefully\r\n\r\n* fix stdin trimming\r\n\r\n* Support for AFL_ENTRYPOINT (#898)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* remove the input file .cur_input at the end of the fuzzing, if AFL_TMPDIR is used\r\n\r\n* reverse push (#901)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* disable QEMU static pie\r\n\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\n\r\n* clarify that no modifications are required.\r\n\r\n* add new test for frida_mode (please review)\r\n\r\n* typos\r\n\r\n* fix persistent mode (64-bit)\r\n\r\n* set ARCH for linux intel 32-bit for frida-gum-devkit\r\n\r\n* prepare for 32-bit support (later)\r\n\r\n* not on qemu 3 anymore\r\n\r\n* unicorn mips fixes\r\n\r\n* instrumentation further move to C++11 (#900)\r\n\r\n* unicorn fixes\r\n\r\n* more unicorn fixes\r\n\r\n* Fix memory errors when trim causes testcase growth (#881) (#903)\r\n\r\n* Revert \"fixed potential double free in custom trim (#881)\"\r\n\r\nThis reverts commit e9d2f72382cab75832721d859c3e731da071435d.\r\n\r\n* Revert \"fix custom trim for increasing data\"\r\n\r\nThis reverts commit 86a8ef168dda766d2f25f15c15c4d3ecf21d0667.\r\n\r\n* Fix memory errors when trim causes testcase growth\r\n\r\nModify trim_case_custom to avoid writing into in_buf because\r\nsome custom mutators can cause the testcase to grow rather than\r\nshrink.\r\n\r\nInstead of modifying in_buf directly, we write the update out\r\nto the disk when trimming is complete, and then the caller is\r\nresponsible for refreshing the in-memory buffer from the file.\r\n\r\nThis is still a bit sketchy because it does need to modify q->len in\r\norder to notify the upper layers that something changed, and it could\r\nend up telling upper layer code that the q->len is *bigger* than\r\nthe buffer (q->testcase_buf) that contains it, which is asking\r\nfor trouble down the line somewhere...\r\n\r\n* Fix an unlikely situation\r\n\r\nPut back some `unlikely()` calls that were in\r\nthe e9d2f72382cab75832721d859c3e731da071435d commit that was\r\nreverted.\r\n\r\n* typo\r\n\r\n* Exit on time (#904)\r\n\r\n* Variable AFL_EXIT_ON_TIME description has been added.\r\nVariables AFL_EXIT_ON_TIME and afl_exit_on_time has been added.\r\nafl->exit_on_time variable initialization has been added.\r\nThe asignment of a value to the afl->afl_env.afl_exit_on_time variable from\r\nenvironment variables has been added.\r\nCode to exit on timeout if new path not found has been added.\r\n\r\n* Type of afl_exit_on_time variable has been changed.\r\nVariable exit_on_time has been added to the afl_state_t structure.\r\n\r\n* Command `export AFL_EXIT_WHEN_DONE=1` has been added.\r\n\r\n* Millisecond to second conversion has been added.\r\nCall get_cur_time() has been added.\r\n\r\n* Revert to using the saved current time value.\r\n\r\n* Useless check has been removed.\r\n\r\n* fix new path to custom-mutators\r\n\r\n* ensure crashes/README.txt exists\r\n\r\n* fix\r\n\r\n* Changes to bump FRIDA version and to clone FRIDA repo in to build directory rather than use a submodule as the FRIDA build scripts don't like it (#906)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Fix numeric overflow in cmplog implementation (#907)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* testcase fixes for unicorn\r\n\r\n* remove merge conflict artifacts\r\n\r\n* fix afl-plot\r\n\r\n* Changes to remove binaries from frida_mode (#913)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Frida cmplog fail fast (#914)\r\n\r\n* Changes to remove binaries from frida_mode\r\n\r\n* Changes to make cmplog fail fast\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* afl-plot: relative time\r\n\r\n* arch linux and mac os support for afl-system-config\r\n\r\n* typo\r\n\r\n* code-format\r\n\r\n* update documentation\r\n\r\n* github workflow for qemu\r\n\r\n* OSX-specific improvements (#912)\r\n\r\n* Fix afl-cc to work correctly by default on OSX using xcode\r\n\r\n- CLANG_ENV_VAR must be set for afl-as to work\r\n- Use clang mode by default if no specific compiler selected\r\n\r\n* Add OSX-specific documentation for configuring shared memory\r\n\r\n* Fixes to memory operands for complog (#916)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix a few cur_time uses\r\n\r\n* added bounds check to pivot_inputs (fixes #921)\r\n\r\n* additional safety checks for restarts\r\n\r\n* restrict afl-showmap in_file size\r\n\r\n* fix seed crash disable\r\n\r\n* add warning for afl-showmap partial read\r\n\r\n* no core dumps\r\n\r\n* AFL_PRINT_FILENAMES added\r\n\r\n* more documentation for AFL_EXIT_ON_TIME\r\n\r\n* Flushing for AFL_PRINT_FILENAMES\r\n\r\n* FASAN Support (#918)\r\n\r\n* FASAN Support\r\n\r\n* Fix handling of Address Sanitizer DSO\r\n\r\n* Changes to identification of Address Sanitizer DSO\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Support for x86 (#920)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Update frida_mode readme (#925)\r\n\r\n* libqasan: use syscalls for read and write\r\n\r\n* update readme\r\n\r\n* Minor integration tweaks (#926)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* merge\r\n\r\n* fix afl-fuzz.c frida preload\r\n\r\n* cleaned up AFL_PRINT_FILENAMES env\r\n\r\n* Changes to have persistent mode exit at the end of the loop (#928)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix llvm-dict2file\r\n\r\n* push to stable (#931) (#932)\r\n\r\n* sync (#886)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* moved custom_mutator examples\r\n\r\n* unicorn speedtest makefile cleanup\r\n\r\n* fixed example location\r\n\r\n* fix qdbi\r\n\r\n* update util readme\r\n\r\n* Frida persistent (#880)\r\n\r\n* Added x64 support for persistent mode (function call only), in-memory teest cases and complog\r\n\r\n* Review changes, fix NeverZero and code to parse the .text section of the main executable. Excluded ranges TBC\r\n\r\n* Various minor fixes and finished support for AFL_INST_LIBS\r\n\r\n* Review changes\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* fix frida mode\r\n\r\n* Integer overflow/underflow fixes in libdislocator (#889)\r\n\r\n* libdislocator: fixing integer overflow in 'max_mem' variable and setting 'max_mem' type to 'size_t'\r\n\r\n* libdislocator: fixing potential integer underflow in 'total_mem' variable due to its different values in different threads\r\n\r\n* Bumped warnings up to the max and fixed remaining issues (#890)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* frida mode - support non-pie\r\n\r\n* nits\r\n\r\n* nit\r\n\r\n* update grammar mutator\r\n\r\n* Fixes for aarch64, OSX and other minor issues (#891)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* nits\r\n\r\n* fix PCGUARD, build aflpp_driver with fPIC\r\n\r\n* Added representative fuzzbench test and test for libxml (#893)\r\n\r\n* Added representative fuzzbench test and test for libxml\r\n\r\n* Added support for building FRIDA from source with FRIDA_SOURCE=1\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* update changelog\r\n\r\n* typos\r\n\r\n* fixed potential double free in custom trim (#881)\r\n\r\n* error handling, freeing mem\r\n\r\n* frida: complog -> cmplog\r\n\r\n* fix statsd writing\r\n\r\n* let aflpp_qemu_driver_hook.so build fail gracefully\r\n\r\n* fix stdin trimming\r\n\r\n* Support for AFL_ENTRYPOINT (#898)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* remove the input file .cur_input at the end of the fuzzing, if AFL_TMPDIR is used\r\n\r\n* reverse push (#901)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* disable QEMU static pie\r\n\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\n\r\n* clarify that no modifications are required.\r\n\r\n* add new test for frida_mode (please review)\r\n\r\n* typos\r\n\r\n* fix persistent mode (64-bit)\r\n\r\n* set ARCH for linux intel 32-bit for frida-gum-devkit\r\n\r\n* prepare for 32-bit support (later)\r\n\r\n* not on qemu 3 anymore\r\n\r\n* unicorn mips fixes\r\n\r\n* instrumentation further move to C++11 (#900)\r\n\r\n* unicorn fixes\r\n\r\n* more unicorn fixes\r\n\r\n* Fix memory errors when trim causes testcase growth (#881) (#903)\r\n\r\n* Revert \"fixed potential double free in custom trim (#881)\"\r\n\r\nThis reverts commit e9d2f72382cab75832721d859c3e731da071435d.\r\n\r\n* Revert \"fix custom trim for increasing data\"\r\n\r\nThis reverts commit 86a8ef168dda766d2f25f15c15c4d3ecf21d0667.\r\n\r\n* Fix memory errors when trim causes testcase growth\r\n\r\nModify trim_case_custom to avoid writing into in_buf because\r\nsome custom mutators can cause the testcase to grow rather than\r\nshrink.\r\n\r\nInstead of modifying in_buf directly, we write the update out\r\nto the disk when trimming is complete, and then the caller is\r\nresponsible for refreshing the in-memory buffer from the file.\r\n\r\nThis is still a bit sketchy because it does need to modify q->len in\r\norder to notify the upper layers that something changed, and it could\r\nend up telling upper layer code that the q->len is *bigger* than\r\nthe buffer (q->testcase_buf) that contains it, which is asking\r\nfor trouble down the line somewhere...\r\n\r\n* Fix an unlikely situation\r\n\r\nPut back some `unlikely()` calls that were in\r\nthe e9d2f72382cab75832721d859c3e731da071435d commit that was\r\nreverted.\r\n\r\n* typo\r\n\r\n* Exit on time (#904)\r\n\r\n* Variable AFL_EXIT_ON_TIME description has been added.\r\nVariables AFL_EXIT_ON_TIME and afl_exit_on_time has been added.\r\nafl->exit_on_time variable initialization has been added.\r\nThe asignment of a value to the afl->afl_env.afl_exit_on_time variable from\r\nenvironment variables has been added.\r\nCode to exit on timeout if new path not found has been added.\r\n\r\n* Type of afl_exit_on_time variable has been changed.\r\nVariable exit_on_time has been added to the afl_state_t structure.\r\n\r\n* Command `export AFL_EXIT_WHEN_DONE=1` has been added.\r\n\r\n* Millisecond to second conversion has been added.\r\nCall get_cur_time() has been added.\r\n\r\n* Revert to using the saved current time value.\r\n\r\n* Useless check has been removed.\r\n\r\n* fix new path to custom-mutators\r\n\r\n* ensure crashes/README.txt exists\r\n\r\n* fix\r\n\r\n* Changes to bump FRIDA version and to clone FRIDA repo in to build directory rather than use a submodule as the FRIDA build scripts don't like it (#906)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Fix numeric overflow in cmplog implementation (#907)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* testcase fixes for unicorn\r\n\r\n* remove merge conflict artifacts\r\n\r\n* fix afl-plot\r\n\r\n* Changes to remove binaries from frida_mode (#913)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Frida cmplog fail fast (#914)\r\n\r\n* Changes to remove binaries from frida_mode\r\n\r\n* Changes to make cmplog fail fast\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* afl-plot: relative time\r\n\r\n* arch linux and mac os support for afl-system-config\r\n\r\n* typo\r\n\r\n* code-format\r\n\r\n* update documentation\r\n\r\n* github workflow for qemu\r\n\r\n* OSX-specific improvements (#912)\r\n\r\n* Fix afl-cc to work correctly by default on OSX using xcode\r\n\r\n- CLANG_ENV_VAR must be set for afl-as to work\r\n- Use clang mode by default if no specific compiler selected\r\n\r\n* Add OSX-specific documentation for configuring shared memory\r\n\r\n* Fixes to memory operands for complog (#916)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix a few cur_time uses\r\n\r\n* added bounds check to pivot_inputs (fixes #921)\r\n\r\n* additional safety checks for restarts\r\n\r\n* restrict afl-showmap in_file size\r\n\r\n* fix seed crash disable\r\n\r\n* add warning for afl-showmap partial read\r\n\r\n* no core dumps\r\n\r\n* AFL_PRINT_FILENAMES added\r\n\r\n* more documentation for AFL_EXIT_ON_TIME\r\n\r\n* Flushing for AFL_PRINT_FILENAMES\r\n\r\n* FASAN Support (#918)\r\n\r\n* FASAN Support\r\n\r\n* Fix handling of Address Sanitizer DSO\r\n\r\n* Changes to identification of Address Sanitizer DSO\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Support for x86 (#920)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Update frida_mode readme (#925)\r\n\r\n* libqasan: use syscalls for read and write\r\n\r\n* update readme\r\n\r\n* Minor integration tweaks (#926)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* merge\r\n\r\n* fix afl-fuzz.c frida preload\r\n\r\n* cleaned up AFL_PRINT_FILENAMES env\r\n\r\n* Changes to have persistent mode exit at the end of the loop (#928)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix llvm-dict2file\r\n\r\nCo-authored-by: Dominik Maier <domenukk@gmail.com>\r\nCo-authored-by: WorksButNotTested <62701594+WorksButNotTested@users.noreply.github.com>\r\nCo-authored-by: Your Name <you@example.com>\r\nCo-authored-by: Dmitry Zheregelya <zheregelya.d@gmail.com>\r\nCo-authored-by: hexcoder <hexcoder-@users.noreply.github.com>\r\nCo-authored-by: hexcoder- <heiko@hexco.de>\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\nCo-authored-by: David CARLIER <devnexen@gmail.com>\r\nCo-authored-by: realmadsci <71108352+realmadsci@users.noreply.github.com>\r\nCo-authored-by: Roman M. Iudichev <SecNotice@ya.ru>\r\nCo-authored-by: Dustin Spicuzza <dustin@virtualroadside.com>\r\n\r\nCo-authored-by: Dominik Maier <domenukk@gmail.com>\r\nCo-authored-by: WorksButNotTested <62701594+WorksButNotTested@users.noreply.github.com>\r\nCo-authored-by: Your Name <you@example.com>\r\nCo-authored-by: Dmitry Zheregelya <zheregelya.d@gmail.com>\r\nCo-authored-by: hexcoder <hexcoder-@users.noreply.github.com>\r\nCo-authored-by: hexcoder- <heiko@hexco.de>\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\nCo-authored-by: David CARLIER <devnexen@gmail.com>\r\nCo-authored-by: realmadsci <71108352+realmadsci@users.noreply.github.com>\r\nCo-authored-by: Roman M. Iudichev <SecNotice@ya.ru>\r\nCo-authored-by: Dustin Spicuzza <dustin@virtualroadside.com>\r\n\r\n* improve error msg\r\n\r\n* Added documentation for wine LoadLibrary workaround (#933)\r\n\r\n* Fix cmake target compilation command example (#934)\r\n\r\n- Fix typo DCMAKE_C_COMPILERC -> DCMAKE_C_COMPILER.\r\n- Add `cd build` after `mkdir build`.\r\n\r\n* showmap passes queue items in alphabetical order\r\n\r\n* added tmp files to gitignore\r\n\r\n* lenient dict parsing, no map size enum for binary fuzzing\r\n\r\n* added info about showmap queue directions\r\n\r\n* update binary-only doc\r\n\r\n* turn off map size detection if skip_bin_check is set\r\n\r\n* Typo\r\n\r\n* update docs\r\n\r\n* update afl-system-config\r\n\r\n* Set kill signal before using it in afl-showmap (#935)\r\n\r\n* fix afl-cc help output\r\n\r\n* add libafl to binary-only doc\r\n\r\n* update docs\r\n\r\n* less executions on variable paths\r\n\r\n* AFL_SKIP_CRASHES is obsolete since 3.0\r\n\r\n* add AFL_TRY_AFFINITY\r\n\r\n* Typo\r\n\r\n* Typo\r\n\r\n* Typo/wording\r\n\r\n* tweaks\r\n\r\n* typos\r\n\r\n* fix afl-whatsup help output\r\n\r\n* fix afl-plot output\r\n\r\n* fix for MacOS\r\n\r\n* fix cmpcov doc for qemu\r\n\r\n* fix tmpfile removal\r\n\r\n* update dockerfile\r\n\r\n* Frida (#940)\r\n\r\n* Added re2 test\r\n\r\n* Added libpcap test\r\n\r\n* Fix validation of setting of ADDR_NO_RANDOMIZE\r\n\r\n* Added support for printing original and instrumented code\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Support for AFL_FRIDA_PERSISTENT_RET (#941)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Changes to add missing exclusion of ranges (#943)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* add --afl-noopt to afl-cc\r\n\r\n* docs: fix link to README in QuickStartGuide (#946)\r\n\r\n* Support writing Stalker stats (#945)\r\n\r\n* Support writing Stalker stats\r\n\r\n* Fixed string handling in print functions\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* afl-cmin help fix, aflpp_driver - + @@ support\r\n\r\n* fix for afl-showmap\r\n\r\nCo-authored-by: Dominik Maier <domenukk@gmail.com>\r\nCo-authored-by: WorksButNotTested <62701594+WorksButNotTested@users.noreply.github.com>\r\nCo-authored-by: Your Name <you@example.com>\r\nCo-authored-by: Dmitry Zheregelya <zheregelya.d@gmail.com>\r\nCo-authored-by: hexcoder <hexcoder-@users.noreply.github.com>\r\nCo-authored-by: hexcoder- <heiko@hexco.de>\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\nCo-authored-by: David CARLIER <devnexen@gmail.com>\r\nCo-authored-by: realmadsci <71108352+realmadsci@users.noreply.github.com>\r\nCo-authored-by: Roman M. Iudichev <SecNotice@ya.ru>\r\nCo-authored-by: Dustin Spicuzza <dustin@virtualroadside.com>\r\nCo-authored-by: 0x4d5a-ctf <51098072+0x4d5a-ctf@users.noreply.github.com>\r\nCo-authored-by: Tommy Chiang <oToToT@users.noreply.github.com>\r\nCo-authored-by: buherator <buherator@silentsignal.hu>\r\nCo-authored-by: Dag Heyman Kajevic <dag.heyman@gmail.com>","tree":{"sha":"e6ce48f481b553108eecc21609f826d33372c7c5","url":"https://api.github.com/repos/jiradeto/AFLplusplus/git/trees/e6ce48f481b553108eecc21609f826d33372c7c5"},"url":"https://api.github.com/repos/jiradeto/AFLplusplus/git/commits/67293b298d2f6146022ac7adebdf17aebf27bea7","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgstbtCRBK7hj4Ov3rIwAAjjEIADfZCKEmtq2TQaClicNQ31/n\nhhsApHI7p0IHwGB5qRKJ4tpVFRnm9SUZIINur7+Ut2uI7R/4OeBqDnpwlSy3MdTb\numCou2vr3VO1Q3EsHIaaFEpsuGYjL2g7kum2tL3SOZqH9l+EVso6iWIgUmvVlPpd\nzYUgHfxHqL7TSKZubgzK4J5zFgo5gW40J51u6fFMz3jD1IpTcZ2+yadhmqa/+ADh\n/tWI3L145dWVCGP3fnM3Iijvn/zuH5f2vVb4QxOqBJMmNK0SpZZTgma+hV8z7pSJ\nmuumHCDsNByI+Go+kCjzH0z9byMua951jjh2JHEQSXgKIUG4QINHPpTrFIpeqqM=\n=QCM9\n-----END PGP SIGNATURE-----\n","payload":"tree e6ce48f481b553108eecc21609f826d33372c7c5\nparent 95f47ac3a4d23b28a573a0614893d7aac5f5d4b4\nauthor van Hauser <vh@thc.org> 1622333165 +0200\ncommitter GitHub <noreply@github.com> 1622333165 +0200\n\nfinal push to stable (really?) (#939)\n\n* sync (#886)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* moved custom_mutator examples\r\n\r\n* unicorn speedtest makefile cleanup\r\n\r\n* fixed example location\r\n\r\n* fix qdbi\r\n\r\n* update util readme\r\n\r\n* Frida persistent (#880)\r\n\r\n* Added x64 support for persistent mode (function call only), in-memory teest cases and complog\r\n\r\n* Review changes, fix NeverZero and code to parse the .text section of the main executable. Excluded ranges TBC\r\n\r\n* Various minor fixes and finished support for AFL_INST_LIBS\r\n\r\n* Review changes\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* fix frida mode\r\n\r\n* Integer overflow/underflow fixes in libdislocator (#889)\r\n\r\n* libdislocator: fixing integer overflow in 'max_mem' variable and setting 'max_mem' type to 'size_t'\r\n\r\n* libdislocator: fixing potential integer underflow in 'total_mem' variable due to its different values in different threads\r\n\r\n* Bumped warnings up to the max and fixed remaining issues (#890)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* frida mode - support non-pie\r\n\r\n* nits\r\n\r\n* nit\r\n\r\n* update grammar mutator\r\n\r\n* Fixes for aarch64, OSX and other minor issues (#891)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* nits\r\n\r\n* fix PCGUARD, build aflpp_driver with fPIC\r\n\r\n* Added representative fuzzbench test and test for libxml (#893)\r\n\r\n* Added representative fuzzbench test and test for libxml\r\n\r\n* Added support for building FRIDA from source with FRIDA_SOURCE=1\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* update changelog\r\n\r\n* typos\r\n\r\n* fixed potential double free in custom trim (#881)\r\n\r\n* error handling, freeing mem\r\n\r\n* frida: complog -> cmplog\r\n\r\n* fix statsd writing\r\n\r\n* let aflpp_qemu_driver_hook.so build fail gracefully\r\n\r\n* fix stdin trimming\r\n\r\n* Support for AFL_ENTRYPOINT (#898)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* remove the input file .cur_input at the end of the fuzzing, if AFL_TMPDIR is used\r\n\r\n* reverse push (#901)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* disable QEMU static pie\r\n\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\n\r\n* clarify that no modifications are required.\r\n\r\n* add new test for frida_mode (please review)\r\n\r\n* typos\r\n\r\n* fix persistent mode (64-bit)\r\n\r\n* set ARCH for linux intel 32-bit for frida-gum-devkit\r\n\r\n* prepare for 32-bit support (later)\r\n\r\n* not on qemu 3 anymore\r\n\r\n* unicorn mips fixes\r\n\r\n* instrumentation further move to C++11 (#900)\r\n\r\n* unicorn fixes\r\n\r\n* more unicorn fixes\r\n\r\n* Fix memory errors when trim causes testcase growth (#881) (#903)\r\n\r\n* Revert \"fixed potential double free in custom trim (#881)\"\r\n\r\nThis reverts commit e9d2f72382cab75832721d859c3e731da071435d.\r\n\r\n* Revert \"fix custom trim for increasing data\"\r\n\r\nThis reverts commit 86a8ef168dda766d2f25f15c15c4d3ecf21d0667.\r\n\r\n* Fix memory errors when trim causes testcase growth\r\n\r\nModify trim_case_custom to avoid writing into in_buf because\r\nsome custom mutators can cause the testcase to grow rather than\r\nshrink.\r\n\r\nInstead of modifying in_buf directly, we write the update out\r\nto the disk when trimming is complete, and then the caller is\r\nresponsible for refreshing the in-memory buffer from the file.\r\n\r\nThis is still a bit sketchy because it does need to modify q->len in\r\norder to notify the upper layers that something changed, and it could\r\nend up telling upper layer code that the q->len is *bigger* than\r\nthe buffer (q->testcase_buf) that contains it, which is asking\r\nfor trouble down the line somewhere...\r\n\r\n* Fix an unlikely situation\r\n\r\nPut back some `unlikely()` calls that were in\r\nthe e9d2f72382cab75832721d859c3e731da071435d commit that was\r\nreverted.\r\n\r\n* typo\r\n\r\n* Exit on time (#904)\r\n\r\n* Variable AFL_EXIT_ON_TIME description has been added.\r\nVariables AFL_EXIT_ON_TIME and afl_exit_on_time has been added.\r\nafl->exit_on_time variable initialization has been added.\r\nThe asignment of a value to the afl->afl_env.afl_exit_on_time variable from\r\nenvironment variables has been added.\r\nCode to exit on timeout if new path not found has been added.\r\n\r\n* Type of afl_exit_on_time variable has been changed.\r\nVariable exit_on_time has been added to the afl_state_t structure.\r\n\r\n* Command `export AFL_EXIT_WHEN_DONE=1` has been added.\r\n\r\n* Millisecond to second conversion has been added.\r\nCall get_cur_time() has been added.\r\n\r\n* Revert to using the saved current time value.\r\n\r\n* Useless check has been removed.\r\n\r\n* fix new path to custom-mutators\r\n\r\n* ensure crashes/README.txt exists\r\n\r\n* fix\r\n\r\n* Changes to bump FRIDA version and to clone FRIDA repo in to build directory rather than use a submodule as the FRIDA build scripts don't like it (#906)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Fix numeric overflow in cmplog implementation (#907)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* testcase fixes for unicorn\r\n\r\n* remove merge conflict artifacts\r\n\r\n* fix afl-plot\r\n\r\n* Changes to remove binaries from frida_mode (#913)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Frida cmplog fail fast (#914)\r\n\r\n* Changes to remove binaries from frida_mode\r\n\r\n* Changes to make cmplog fail fast\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* afl-plot: relative time\r\n\r\n* arch linux and mac os support for afl-system-config\r\n\r\n* typo\r\n\r\n* code-format\r\n\r\n* update documentation\r\n\r\n* github workflow for qemu\r\n\r\n* OSX-specific improvements (#912)\r\n\r\n* Fix afl-cc to work correctly by default on OSX using xcode\r\n\r\n- CLANG_ENV_VAR must be set for afl-as to work\r\n- Use clang mode by default if no specific compiler selected\r\n\r\n* Add OSX-specific documentation for configuring shared memory\r\n\r\n* Fixes to memory operands for complog (#916)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix a few cur_time uses\r\n\r\n* added bounds check to pivot_inputs (fixes #921)\r\n\r\n* additional safety checks for restarts\r\n\r\n* restrict afl-showmap in_file size\r\n\r\n* fix seed crash disable\r\n\r\n* add warning for afl-showmap partial read\r\n\r\n* no core dumps\r\n\r\n* AFL_PRINT_FILENAMES added\r\n\r\n* more documentation for AFL_EXIT_ON_TIME\r\n\r\n* Flushing for AFL_PRINT_FILENAMES\r\n\r\n* FASAN Support (#918)\r\n\r\n* FASAN Support\r\n\r\n* Fix handling of Address Sanitizer DSO\r\n\r\n* Changes to identification of Address Sanitizer DSO\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Support for x86 (#920)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Update frida_mode readme (#925)\r\n\r\n* libqasan: use syscalls for read and write\r\n\r\n* update readme\r\n\r\n* Minor integration tweaks (#926)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* merge\r\n\r\n* fix afl-fuzz.c frida preload\r\n\r\n* cleaned up AFL_PRINT_FILENAMES env\r\n\r\n* Changes to have persistent mode exit at the end of the loop (#928)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix llvm-dict2file\r\n\r\n* push to stable (#931) (#932)\r\n\r\n* sync (#886)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* moved custom_mutator examples\r\n\r\n* unicorn speedtest makefile cleanup\r\n\r\n* fixed example location\r\n\r\n* fix qdbi\r\n\r\n* update util readme\r\n\r\n* Frida persistent (#880)\r\n\r\n* Added x64 support for persistent mode (function call only), in-memory teest cases and complog\r\n\r\n* Review changes, fix NeverZero and code to parse the .text section of the main executable. Excluded ranges TBC\r\n\r\n* Various minor fixes and finished support for AFL_INST_LIBS\r\n\r\n* Review changes\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* fix frida mode\r\n\r\n* Integer overflow/underflow fixes in libdislocator (#889)\r\n\r\n* libdislocator: fixing integer overflow in 'max_mem' variable and setting 'max_mem' type to 'size_t'\r\n\r\n* libdislocator: fixing potential integer underflow in 'total_mem' variable due to its different values in different threads\r\n\r\n* Bumped warnings up to the max and fixed remaining issues (#890)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* frida mode - support non-pie\r\n\r\n* nits\r\n\r\n* nit\r\n\r\n* update grammar mutator\r\n\r\n* Fixes for aarch64, OSX and other minor issues (#891)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* nits\r\n\r\n* fix PCGUARD, build aflpp_driver with fPIC\r\n\r\n* Added representative fuzzbench test and test for libxml (#893)\r\n\r\n* Added representative fuzzbench test and test for libxml\r\n\r\n* Added support for building FRIDA from source with FRIDA_SOURCE=1\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* nits\r\n\r\n* update changelog\r\n\r\n* typos\r\n\r\n* fixed potential double free in custom trim (#881)\r\n\r\n* error handling, freeing mem\r\n\r\n* frida: complog -> cmplog\r\n\r\n* fix statsd writing\r\n\r\n* let aflpp_qemu_driver_hook.so build fail gracefully\r\n\r\n* fix stdin trimming\r\n\r\n* Support for AFL_ENTRYPOINT (#898)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* remove the input file .cur_input at the end of the fuzzing, if AFL_TMPDIR is used\r\n\r\n* reverse push (#901)\r\n\r\n* Create FUNDING.yml\r\n\r\n* Update FUNDING.yml\r\n\r\n* disable QEMU static pie\r\n\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\n\r\n* clarify that no modifications are required.\r\n\r\n* add new test for frida_mode (please review)\r\n\r\n* typos\r\n\r\n* fix persistent mode (64-bit)\r\n\r\n* set ARCH for linux intel 32-bit for frida-gum-devkit\r\n\r\n* prepare for 32-bit support (later)\r\n\r\n* not on qemu 3 anymore\r\n\r\n* unicorn mips fixes\r\n\r\n* instrumentation further move to C++11 (#900)\r\n\r\n* unicorn fixes\r\n\r\n* more unicorn fixes\r\n\r\n* Fix memory errors when trim causes testcase growth (#881) (#903)\r\n\r\n* Revert \"fixed potential double free in custom trim (#881)\"\r\n\r\nThis reverts commit e9d2f72382cab75832721d859c3e731da071435d.\r\n\r\n* Revert \"fix custom trim for increasing data\"\r\n\r\nThis reverts commit 86a8ef168dda766d2f25f15c15c4d3ecf21d0667.\r\n\r\n* Fix memory errors when trim causes testcase growth\r\n\r\nModify trim_case_custom to avoid writing into in_buf because\r\nsome custom mutators can cause the testcase to grow rather than\r\nshrink.\r\n\r\nInstead of modifying in_buf directly, we write the update out\r\nto the disk when trimming is complete, and then the caller is\r\nresponsible for refreshing the in-memory buffer from the file.\r\n\r\nThis is still a bit sketchy because it does need to modify q->len in\r\norder to notify the upper layers that something changed, and it could\r\nend up telling upper layer code that the q->len is *bigger* than\r\nthe buffer (q->testcase_buf) that contains it, which is asking\r\nfor trouble down the line somewhere...\r\n\r\n* Fix an unlikely situation\r\n\r\nPut back some `unlikely()` calls that were in\r\nthe e9d2f72382cab75832721d859c3e731da071435d commit that was\r\nreverted.\r\n\r\n* typo\r\n\r\n* Exit on time (#904)\r\n\r\n* Variable AFL_EXIT_ON_TIME description has been added.\r\nVariables AFL_EXIT_ON_TIME and afl_exit_on_time has been added.\r\nafl->exit_on_time variable initialization has been added.\r\nThe asignment of a value to the afl->afl_env.afl_exit_on_time variable from\r\nenvironment variables has been added.\r\nCode to exit on timeout if new path not found has been added.\r\n\r\n* Type of afl_exit_on_time variable has been changed.\r\nVariable exit_on_time has been added to the afl_state_t structure.\r\n\r\n* Command `export AFL_EXIT_WHEN_DONE=1` has been added.\r\n\r\n* Millisecond to second conversion has been added.\r\nCall get_cur_time() has been added.\r\n\r\n* Revert to using the saved current time value.\r\n\r\n* Useless check has been removed.\r\n\r\n* fix new path to custom-mutators\r\n\r\n* ensure crashes/README.txt exists\r\n\r\n* fix\r\n\r\n* Changes to bump FRIDA version and to clone FRIDA repo in to build directory rather than use a submodule as the FRIDA build scripts don't like it (#906)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Fix numeric overflow in cmplog implementation (#907)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* testcase fixes for unicorn\r\n\r\n* remove merge conflict artifacts\r\n\r\n* fix afl-plot\r\n\r\n* Changes to remove binaries from frida_mode (#913)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Frida cmplog fail fast (#914)\r\n\r\n* Changes to remove binaries from frida_mode\r\n\r\n* Changes to make cmplog fail fast\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* afl-plot: relative time\r\n\r\n* arch linux and mac os support for afl-system-config\r\n\r\n* typo\r\n\r\n* code-format\r\n\r\n* update documentation\r\n\r\n* github workflow for qemu\r\n\r\n* OSX-specific improvements (#912)\r\n\r\n* Fix afl-cc to work correctly by default on OSX using xcode\r\n\r\n- CLANG_ENV_VAR must be set for afl-as to work\r\n- Use clang mode by default if no specific compiler selected\r\n\r\n* Add OSX-specific documentation for configuring shared memory\r\n\r\n* Fixes to memory operands for complog (#916)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix a few cur_time uses\r\n\r\n* added bounds check to pivot_inputs (fixes #921)\r\n\r\n* additional safety checks for restarts\r\n\r\n* restrict afl-showmap in_file size\r\n\r\n* fix seed crash disable\r\n\r\n* add warning for afl-showmap partial read\r\n\r\n* no core dumps\r\n\r\n* AFL_PRINT_FILENAMES added\r\n\r\n* more documentation for AFL_EXIT_ON_TIME\r\n\r\n* Flushing for AFL_PRINT_FILENAMES\r\n\r\n* FASAN Support (#918)\r\n\r\n* FASAN Support\r\n\r\n* Fix handling of Address Sanitizer DSO\r\n\r\n* Changes to identification of Address Sanitizer DSO\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Support for x86 (#920)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Update frida_mode readme (#925)\r\n\r\n* libqasan: use syscalls for read and write\r\n\r\n* update readme\r\n\r\n* Minor integration tweaks (#926)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* merge\r\n\r\n* fix afl-fuzz.c frida preload\r\n\r\n* cleaned up AFL_PRINT_FILENAMES env\r\n\r\n* Changes to have persistent mode exit at the end of the loop (#928)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* fix llvm-dict2file\r\n\r\nCo-authored-by: Dominik Maier <domenukk@gmail.com>\r\nCo-authored-by: WorksButNotTested <62701594+WorksButNotTested@users.noreply.github.com>\r\nCo-authored-by: Your Name <you@example.com>\r\nCo-authored-by: Dmitry Zheregelya <zheregelya.d@gmail.com>\r\nCo-authored-by: hexcoder <hexcoder-@users.noreply.github.com>\r\nCo-authored-by: hexcoder- <heiko@hexco.de>\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\nCo-authored-by: David CARLIER <devnexen@gmail.com>\r\nCo-authored-by: realmadsci <71108352+realmadsci@users.noreply.github.com>\r\nCo-authored-by: Roman M. Iudichev <SecNotice@ya.ru>\r\nCo-authored-by: Dustin Spicuzza <dustin@virtualroadside.com>\r\n\r\nCo-authored-by: Dominik Maier <domenukk@gmail.com>\r\nCo-authored-by: WorksButNotTested <62701594+WorksButNotTested@users.noreply.github.com>\r\nCo-authored-by: Your Name <you@example.com>\r\nCo-authored-by: Dmitry Zheregelya <zheregelya.d@gmail.com>\r\nCo-authored-by: hexcoder <hexcoder-@users.noreply.github.com>\r\nCo-authored-by: hexcoder- <heiko@hexco.de>\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\nCo-authored-by: David CARLIER <devnexen@gmail.com>\r\nCo-authored-by: realmadsci <71108352+realmadsci@users.noreply.github.com>\r\nCo-authored-by: Roman M. Iudichev <SecNotice@ya.ru>\r\nCo-authored-by: Dustin Spicuzza <dustin@virtualroadside.com>\r\n\r\n* improve error msg\r\n\r\n* Added documentation for wine LoadLibrary workaround (#933)\r\n\r\n* Fix cmake target compilation command example (#934)\r\n\r\n- Fix typo DCMAKE_C_COMPILERC -> DCMAKE_C_COMPILER.\r\n- Add `cd build` after `mkdir build`.\r\n\r\n* showmap passes queue items in alphabetical order\r\n\r\n* added tmp files to gitignore\r\n\r\n* lenient dict parsing, no map size enum for binary fuzzing\r\n\r\n* added info about showmap queue directions\r\n\r\n* update binary-only doc\r\n\r\n* turn off map size detection if skip_bin_check is set\r\n\r\n* Typo\r\n\r\n* update docs\r\n\r\n* update afl-system-config\r\n\r\n* Set kill signal before using it in afl-showmap (#935)\r\n\r\n* fix afl-cc help output\r\n\r\n* add libafl to binary-only doc\r\n\r\n* update docs\r\n\r\n* less executions on variable paths\r\n\r\n* AFL_SKIP_CRASHES is obsolete since 3.0\r\n\r\n* add AFL_TRY_AFFINITY\r\n\r\n* Typo\r\n\r\n* Typo\r\n\r\n* Typo/wording\r\n\r\n* tweaks\r\n\r\n* typos\r\n\r\n* fix afl-whatsup help output\r\n\r\n* fix afl-plot output\r\n\r\n* fix for MacOS\r\n\r\n* fix cmpcov doc for qemu\r\n\r\n* fix tmpfile removal\r\n\r\n* update dockerfile\r\n\r\n* Frida (#940)\r\n\r\n* Added re2 test\r\n\r\n* Added libpcap test\r\n\r\n* Fix validation of setting of ADDR_NO_RANDOMIZE\r\n\r\n* Added support for printing original and instrumented code\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Support for AFL_FRIDA_PERSISTENT_RET (#941)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* Changes to add missing exclusion of ranges (#943)\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* add --afl-noopt to afl-cc\r\n\r\n* docs: fix link to README in QuickStartGuide (#946)\r\n\r\n* Support writing Stalker stats (#945)\r\n\r\n* Support writing Stalker stats\r\n\r\n* Fixed string handling in print functions\r\n\r\nCo-authored-by: Your Name <you@example.com>\r\n\r\n* afl-cmin help fix, aflpp_driver - + @@ support\r\n\r\n* fix for afl-showmap\r\n\r\nCo-authored-by: Dominik Maier <domenukk@gmail.com>\r\nCo-authored-by: WorksButNotTested <62701594+WorksButNotTested@users.noreply.github.com>\r\nCo-authored-by: Your Name <you@example.com>\r\nCo-authored-by: Dmitry Zheregelya <zheregelya.d@gmail.com>\r\nCo-authored-by: hexcoder <hexcoder-@users.noreply.github.com>\r\nCo-authored-by: hexcoder- <heiko@hexco.de>\r\nCo-authored-by: Andrea Fioraldi <andreafioraldi@gmail.com>\r\nCo-authored-by: David CARLIER <devnexen@gmail.com>\r\nCo-authored-by: realmadsci <71108352+realmadsci@users.noreply.github.com>\r\nCo-authored-by: Roman M. Iudichev <SecNotice@ya.ru>\r\nCo-authored-by: Dustin Spicuzza <dustin@virtualroadside.com>\r\nCo-authored-by: 0x4d5a-ctf <51098072+0x4d5a-ctf@users.noreply.github.com>\r\nCo-authored-by: Tommy Chiang <oToToT@users.noreply.github.com>\r\nCo-authored-by: buherator <buherator@silentsignal.hu>\r\nCo-authored-by: Dag Heyman Kajevic <dag.heyman@gmail.com>"}},"url":"https://api.github.com/repos/jiradeto/AFLplusplus/commits/67293b298d2f6146022ac7adebdf17aebf27bea7","html_url":"https://github.com/jiradeto/AFLplusplus/commit/67293b298d2f6146022ac7adebdf17aebf27bea7","comments_url":"https://api.github.com/repos/jiradeto/AFLplusplus/commits/67293b298d2f6146022ac7adebdf17aebf27bea7/comments","author":{"login":"vanhauser-thc","id":7396244,"node_id":"MDQ6VXNlcjczOTYyNDQ=","avatar_url":"https://avatars.githubusercontent.com/u/7396244?v=4","gravatar_id":"","url":"https://api.github.com/users/vanhauser-thc","html_url":"https://github.com/vanhauser-thc","followers_url":"https://api.github.com/users/vanhauser-thc/followers","following_url":"https://api.github.com/users/vanhauser-thc/following{/other_user}","gists_url":"https://api.github.com/users/vanhauser-thc/gists{/gist_id}","starred_url":"https://api.github.com/users/vanhauser-thc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vanhauser-thc/subscriptions","organizations_url":"https://api.github.com/users/vanhauser-thc/orgs","repos_url":"https://api.github.com/users/vanhauser-thc/repos","events_url":"https://api.github.com/users/vanhauser-thc/events{/privacy}","received_events_url":"https://api.github.com/users/vanhauser-thc/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"95f47ac3a4d23b28a573a0614893d7aac5f5d4b4","url":"https://api.github.com/repos/jiradeto/AFLplusplus/commits/95f47ac3a4d23b28a573a0614893d7aac5f5d4b4","html_url":"https://github.com/jiradeto/AFLplusplus/commit/95f47ac3a4d23b28a573a0614893d7aac5f5d4b4"}]}]