[{"sha":"df651519a53790676dbef401b5f24b1bc0b183da","node_id":"MDY6Q29tbWl0NzM2NzA3NDI6ZGY2NTE1MTlhNTM3OTA2NzZkYmVmNDAxYjVmMjRiMWJjMGIxODNkYQ==","commit":{"author":{"name":"Quorum Bot","email":"46820074+quorumbot@users.noreply.github.com","date":"2021-09-03T08:20:44Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-09-03T08:20:44Z"},"message":"[Upgrade] Go-Ethereum release v1.9.25 (#1223)\n\n* params: begin v1.9.25 release cycle\r\n\r\n* crypto/bn256: improve bn256 fuzzer (#21815)\r\n\r\n* crypto/cloudflare: fix nil deref in random G1/G2 reading\r\n\r\n* crypto/bn256: improve fuzzer\r\n\r\n* crypto/bn256: fix some flaws in fuzzer\r\n\r\n* crypto/bn256: better comments for u, P and Order (#21836)\r\n\r\n* tests/fuzzers: improve the fuzzers (#21829)\r\n\r\n* tests/fuzzers, common/bitutil: make fuzzers use correct returnvalues + remove output\r\n\r\n* tests/fuzzers/stacktrie: fix duplicate-key insertion in stacktrie (false positive)\r\n\r\n* tests/fuzzers/stacktrie: fix compilation error\r\n\r\n* tests/fuzzers: linter nits\r\n\r\n* core/vm, protocol_params: implement eip-2565 modexp repricing (#21607)\r\n\r\n* core/vm, protocol_params: implement eip-2565 modexp repricing\r\n\r\n* core/vm: fix review concerns\r\n\r\n* core, all: split vm.Context into BlockContext and TxContext (#21672)\r\n\r\n* all: core: split vm.Config into BlockConfig and TxConfig\r\n\r\n* core: core/vm: reset EVM between tx in block instead of creating new\r\n\r\n* core/vm: added docs\r\n\r\n* accounts/abi: template: set events Raw field in Parse methods (#21807)\r\n\r\n* common: fix documentation of Address.SetBytes (#21814)\r\n\r\n* crypto/bn256: refine comments according to #19577, #21595, and #21836 (#21847)\r\n\r\n* consensus/ethash: fix usage of *reflect.SliceHeader (#21372)\r\n\r\n* consensus/ethash: only use *reflect.SliceHeader, not reflect.SliceHeader. See comment here: https://github.com/golang/go/issues/40397\\#issuecomment-663748689\r\n\r\n* consensus/ethash: pr feedback from @mdempsky, makes a copy of dest such that is not mutated\r\n\r\n* consensus/ethash: remove noop assign\r\n\r\n* consensus/ethash: apply same fix to another location\r\n\r\nCo-authored-by: Péter Szilágyi <peterke@gmail.com>\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* cmd/geth: remove retesteth\r\n\r\n* crypto/secp256k1: add checking z sign in affineFromJacobian (#18419)\r\n\r\nThe z == 0 check is hit whenever we Add two points with the same x1/x2\r\ncoordinate. crypto/elliptic uses the same check in their affineFromJacobian\r\nfunction. This change does not affect block processing or tx signature verification\r\nin any way, because it does not use the Add or Double methods.\r\n\r\n* cmd/geth: improve les test on windows (#21860)\r\n\r\n* all: disable recording preimage of trie keys (#21402)\r\n\r\n* cmd, core, eth, light, trie: disable recording preimage by default\r\n\r\n* core, eth: fix unit tests\r\n\r\n* core: fix import\r\n\r\n* all: change to nopreimage\r\n\r\n* cmd, core, eth, trie: use cache.preimages flag\r\n\r\n* cmd: enable preimages for archive node\r\n\r\n* cmd/utils, trie: simplify preimage tracking a bit\r\n\r\n* core: fix linter\r\n\r\nCo-authored-by: Péter Szilágyi <peterke@gmail.com>\r\n\r\n* metrics: fix the panic for reading empty cpu stats (#21864)\r\n\r\n* node: support expressive origin rules in ws.origins (#21481)\r\n\r\n* Only compare hostnames in ws.origins\r\n\r\nAlso using a helper function for ToLower consolidates all preparation steps in one function for more maintainable consistency.\r\n\r\nSpaces => tabs\r\n\r\nRemove a semicolon\r\n\r\nAdd space at start of comment\r\n\r\nRemove parens around conditional\r\n\r\nHandle case wehre parsed hostname is empty\r\n\r\nWhen passing a single word like \"localhost\" the parsed hostname is an empty string. Handle this and the error-parsing case together as default, and the nonempty hostname case in the conditional.\r\n\r\nRefactor with new originIsAllowed functions\r\n\r\nAdds originIsAllowed() & ruleAllowsOrigin(); removes prepOriginForComparison\r\n\r\nRemove blank line\r\n\r\nAdded tests for simple allowed-orign rule\r\n\r\nwhich does not specify a protocol or port, just a hostname\r\n\r\nFix copy-paste: `:=` => `=`\r\n\r\nRemove parens around conditional\r\n\r\nRemove autoadded whitespace on blank lines\r\n\r\nCompare scheme, hostname, and port with rule\r\n\r\nif the rule specifies those portions.\r\n\r\nRemove one autoadded trailing whitespace\r\n\r\nBetter handle case where only origin host is given\r\n\r\ne.g. \"localhost\"\r\n\r\nRemove parens around conditional\r\n\r\nRefactor: attemptWebsocketConnectionFromOrigin DRY\r\n\r\nInclude return type on helper function\r\n\r\nProvide srv obj in helper fn\r\n\r\nProvide srv to helper fn\r\n\r\nRemove stray underscore\r\n\r\nRemove blank line\r\n\r\nparent 93e666b4c1e7e49b8406dc83ed93f4a02ea49ac1\r\nauthor wbt <wbt@users.noreply.github.com> 1598559718 -0400\r\ncommitter Martin Holst Swende <martin@swende.se> 1605602257 +0100\r\ngpgsig -----BEGIN PGP SIGNATURE-----\r\n\r\n iQFFBAABCAAvFiEEypmrtbNuJK1doP1AaDtDjAWl3fAFAl+zi9ARHG1hcnRpbkBz\r\n d2VuZGUuc2UACgkQaDtDjAWl3fDRiwgAoMtzU8dwRV7Q9xkCwWEx9Wz2f3n6jUr2\r\n VWBycDKGKwRkPPOER3oc9kzjGU/P1tFlK07PjfnAKZ9KWzxpDcJZwYM3xCBurG7A\r\n 16y4YsQnzgPNONv3xIkdi3RZtDBIiPFFEmdZFFvZ/jKexfI6JIYPngCAoqdTIFb9\r\n On/aPvvVWQn1ExfmarsvvJ7kUDUG77tZipuacEH5FfFsfelBWOEYPe+I9ToUHskv\r\n +qO6rOkV1Ojk8eBc6o0R1PnApwCAlEhJs7aM/SEOg4B4ZJJneiFuEXBIG9+0yS2I\r\n NOicuDPLGucOB5nBsfIKI3USPeE+3jxdT8go2lN5Nrhm6MimoILDsQ==\r\n =sgUp\r\n -----END PGP SIGNATURE-----\r\n\r\nRefactor: drop err var for more concise test lines\r\n\r\nAdd several tests for new WebSocket origin checks\r\n\r\nRemove autoadded whitespace on blank lines\r\n\r\nRestore TestWebsocketOrigins originally-named test\r\n\r\nand rename the others to be helpers rather than full tests\r\n\r\nRemove autoadded whitespace on blank line\r\n\r\nTemporarily comment out new test sets\r\n\r\nUncomment test around origin rule with scheme\r\n\r\nRemove tests without scheme on browser origin\r\n\r\nper https://github.com/ethereum/go-ethereum/pull/21481/files#r479371498\r\n\r\nUncomment tests with port; remove some blank lines\r\n\r\nHandle when browser does not specify scheme/port\r\n\r\nUncomment test for including scheme & port in rule\r\n\r\nAdd IP tests\r\n\r\n* node: more tests + table-driven, ws origin changes\r\n\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* trie, rpc, cmd/geth: fix tests on 32-bit and windows + minor rpc fixes (#21871)\r\n\r\n* trie: fix tests to work on 32-bit systems\r\n\r\n* les: make test work on 32-bit platform\r\n\r\n* cmd/geth: fix windows-issues on tests\r\n\r\n* trie: improve balance\r\n\r\n* cmd/geth: make account tests less verbose + less mem intense\r\n\r\n* rpc: make debug-level log output less verbose\r\n\r\n* cmd/geth: lint\r\n\r\n* crypto/bn256: fix bn256Mul fuzzer to not hang on large input (#21872)\r\n\r\n* crypto/bn256: fix bn256Mul fuzzer to not hang on large input\r\n\r\n* Update crypto/bn256/bn256_fuzz.go\r\n\r\nCo-authored-by: ligi <ligi@ligi.de>\r\n\r\nCo-authored-by: ligi <ligi@ligi.de>\r\n\r\n* p2p: avoid spinning loop on out-of-handles (#21878)\r\n\r\n* p2p: avoid busy-loop on temporary errors\r\n\r\n* p2p: address review concerns\r\n\r\n* les/utils: protect against WeightedRandomSelect overflow (#21839)\r\n\r\nAlso fixes a bug in les/flowcontrol that caused the overflow.\r\n\r\n* github: Add new style of issue-templates\r\n\r\ncloses #20024\r\n\r\n* tests/fuzzers/bls1381: add bls fuzzer (#21796)\r\n\r\n* added bls fuzzer\r\n\r\n* crypto/bls12381: revert bls-changes, fixup fuzzer tests\r\n\r\n* fuzzers: split bls fuzzing into 8 different units\r\n\r\n* fuzzers/bls: remove (now stale) corpus\r\n\r\n* crypto/bls12381: added blsfuzz corpus\r\n\r\n* fuzzers/bls12381: fix the bls corpus\r\n\r\n* fuzzers: fix oss-fuzz script\r\n\r\n* tests/fuzzers: fixups on bls corpus\r\n\r\n* test/fuzzers: remove leftover corpus\r\n\r\nCo-authored-by: Marius van der Wijden <m.vanderwijden@live.de>\r\n\r\n* cmd/faucet: improve handling of facebook post url (#21838)\r\n\r\nResolves #21532\r\n\r\nCo-authored-by: roger <dengjun@huobi.com>\r\n\r\n* les: fix GetProofsV2 bug (#21896)\r\n\r\n* github: Remove vulnerability.md (#21894)\r\n\r\nThis type is automatically offered by github after changing to the new style and a security.md being present\r\n\r\n* cmd/devp2p/internal/ethtest: add 'large announcement' tests (#21792)\r\n\r\n* cmd/devp2p/internal/ethtest: added large announcement tests\r\n\r\n* cmd/devp2p/internal/ethtest: added large announcement tests\r\n\r\n* cmd/devp2p/internal/ethtest: refactored stuff a bit\r\n\r\n* cmd/devp2p/internal/ethtest: added TestMaliciousStatus/Handshake\r\n\r\n* cmd/devp2p/internal/ethtest: fixed rebasing issue\r\n\r\n* happy linter, happy life\r\n\r\n* cmd/devp2p/internal/ethtest: used readAndServe\r\n\r\n* stuff\r\n\r\n* cmd/devp2p/internal/ethtest: fixed test cases\r\n\r\n* core/types: fixed typo (#21897)\r\n\r\n* all: simplify nested complexity and if blocks ending with a return statement (#21854)\r\n\r\nChanges:\r\n\r\n    Simplify nested complexity\r\n    If an if blocks ends with a return statement then remove the else nesting.\r\n\r\nMost of the changes has also been reported in golint https://goreportcard.com/report/github.com/ethereum/go-ethereum#golint\r\n\r\n* graphql: always return 400 if errors are present in the response (#21882)\r\n\r\n* Make sure to return 400 when errors are present in the response\r\n\r\n* graphql: use less memory in chainconfig for tests\r\n\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* all: remove redundant conversions and import names (#21903)\r\n\r\n* p2p/discover: fix deadlock in discv5 message dispatch (#21858)\r\n\r\nThis fixes a deadlock that could occur when a response packet arrived\r\nafter a call had already received enough responses and was about to\r\nsignal completion to the dispatch loop.\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* crypto: signing builds with signify/minisign (#21798)\r\n\r\n* internal/build: implement signify's signing func\r\n* Add signify to the ci utility\r\n* fix output file format\r\n* Add unit test for signify\r\n* holiman's + travis' feedback\r\n* internal/build: verify signify's output\r\n* crypto: move signify to common dir\r\n* use go-minisign to verify binaries\r\n* more holiman feedback\r\n* crypto, ci: support minisign output\r\n* only accept one-line trusted comments\r\n* configurable untrusted comments\r\n* code cleanup in tests\r\n* revert to use ed25519 from the stdlib\r\n* bug: fix for empty untrusted comments\r\n* write timestamp as comment if trusted comment isn't present\r\n* rename line checker to commentHasManyLines\r\n* crypto: added signify fuzzer (#6)\r\n* crypto: added signify fuzzer\r\n* stuff\r\n* crypto: updated signify fuzzer to fuzz comments\r\n* crypto: repro signify crashes\r\n* rebased fuzzer on build-signify branch\r\n* hide fuzzer behind gofuzz build flag\r\n* extract key data inside a single function\r\n* don't treat \\r as a newline\r\n* travis: fix signing command line\r\n* do not use an external binary in tests\r\n* crypto: move signify to crypto/signify\r\n* travis: fix formatting issue\r\n* ci: fix linter build after package move\r\n\r\nCo-authored-by: Marius van der Wijden <m.vanderwijden@live.de>\r\n\r\n* accounts, signer: fix Ledger Live account derivation path (clef) (#21757)\r\n\r\n* signer/core/api: fix derivation of ledger live accounts\r\n\r\nFor ledger hardware wallets, change account iteration as follows:\r\n\r\n- ledger legacy: m/44'/60'/0'/X; for 0<=X<5\r\n- ledger live: m/44'/60'/0'/0/X; for 0<=X<5\r\n\r\n- ledger legacy: m/44'/60'/0'/X; for 0<=X<10\r\n- ledger live: m/44'/60'/X'/0/0; for 0<=X<10\r\n\r\nNon-ledger derivation is unchanged and remains as:\r\n- non-ledger: m/44'/60'/0'/0/X; for 0<=X<10\r\n\r\n* signer/core/api: derive ten default paths for all hardware wallets, plus ten legacy and ten live paths for ledger wallets\r\n\r\n* signer/core/api: as .../0'/0/0 already included by default paths, do not include it again with ledger live paths\r\n\r\n* accounts, signer: implement path iterators for hd wallets\r\n\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* accounts/keystore: add missing function doc for SignText (#21914)\r\n\r\nCo-authored-by: Pascal Dierich <pascal@pascaldierich.com>\r\n\r\n* cmd/geth: make tests run quicker + use less memory and disk (#21919)\r\n\r\n* cmd/devp2p/internal/ethtest: add transaction tests (#21857)\r\n\r\n* p2p/nodestate: fix deadlock during shutdown of les server (#21927)\r\n\r\nThis PR fixes a deadlock reported here: #21925\r\n\r\nThe cause is that many operations may be pending, but if the close happens, only one of them gets awoken and exits, the others remain waiting for a signal that never comes.\r\n\r\n* les: fix nodiscover option (#21906)\r\n\r\n* params: update CHTs (#21941)\r\n\r\n* eth: fix error in tracing if reexec is set (#21830)\r\n\r\n* eth: fix error in tracing if reexec is set\r\n\r\n* eth: change pointer embedding to value-embedding\r\n\r\n* go.mod: update github.com/golang/snappy(#21934)\r\n\r\nThis updates the snappy library depency to include a fix for\r\na Go 1.16 incompatibility issue.\r\n\r\n* cmd/devp2p: add node filter for snap + fix arg error (#21950)\r\n\r\n* core/vm/runtime: remove duplicated line (#21956)\r\n\r\n\r\nThis line is duplicated, though it doesn't cause any issues.\r\n\r\n* core: improve contextual information on core errors (#21869)\r\n\r\nA lot of times when we hit 'core' errors, example: invalid tx, the information provided is\r\ninsufficient. We miss several pieces of information: what account has nonce too high,\r\nand what transaction in that block was offending?\r\n\r\nThis PR adds that information, using the new type of wrapped errors.\r\nIt also adds a testcase which (partly) verifies the output from the errors.\r\n\r\nThe first commit changes all usage of direct equality-checks on core errors, into\r\nusing errors.Is. The second commit adds contextual information. This wraps most\r\nof the core errors with more information, and also wraps it one more time in\r\nstateprocessor, to further provide tx index and tx hash, if such a tx is encoutered in\r\na block. The third commit uses the chainmaker to try to generate chains with such\r\nerrors in them, thus triggering the errors and checking that the generated string meets\r\nexpectations.\r\n\r\n* cmd/geth: implement vulnerability check (#21859)\r\n\r\n* cmd/geth: implement vulnerability check\r\n\r\n* cmd/geth: use minisign to verify vulnerability feed\r\n\r\n* cmd/geth: add the test too\r\n\r\n* cmd/geth: more minisig/signify testing\r\n\r\n* cmd/geth: support multiple pubfiles for signing\r\n\r\n* cmd/geth: add @holiman minisig pubkey\r\n\r\n* cmd/geth: polishes on vulnerability check\r\n\r\n* cmd/geth: fix ineffassign linter nit\r\n\r\n* cmd/geth: add CVE to version check struct\r\n\r\n* cmd/geth/testdata: add missing testfile\r\n\r\n* cmd/geth: add more keys to versionchecker\r\n\r\n* cmd/geth: support file:// URLs in version check\r\n\r\n* cmd/geth: improve key ID printing when signature check fails\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* les: cosmetic rewrite of the arm64 float bug workaround (#21960)\r\n\r\n* les: revert arm float bug workaround to check go 1.15\r\n\r\n* add traces to reproduce outside travis\r\n\r\n* simpler workaround\r\n\r\n* crypto/secp256k1: add workaround for go mod vendor (#21735)\r\n\r\nGo won't vendor C files if there are no Go files present in the directory.\r\nWorkaround is to add dummy Go files.\r\n\r\nFixes: #20232\r\n\r\n* accounts/abi/bind: allow specifying signer on transactOpts (#21356)\r\n\r\nThis commit enables users to specify which signer they want to use while creating their transactOpts.\r\nPreviously all contract interactions used the homestead signer. Now a user can specify whether they\r\nwant to sign with homestead or EIP155 and specify the chainID which adds another layer of security.\r\n\r\nCloses #16484\r\n\r\n* common: improve printing of Hash and Address (#21834)\r\n\r\nBoth Hash and Address have a String method, which returns the value as\r\nhex with 0x prefix. They also had a Format method which tried to print\r\nthe value using printf of []byte. The way Format worked was at odds with\r\nString though, leading to a situation where fmt.Sprintf(\"%v\", hash)\r\nreturned the decimal notation and hash.String() returned a hex string.\r\n\r\nThis commit makes it consistent again. Both types now support the %v,\r\n%s, %q format verbs for 0x-prefixed hex output. %x, %X creates\r\nunprefixed hex output. %d is also supported and returns the decimal\r\nnotation \"[1 2 3...]\".\r\n\r\nFor Address, the case of hex characters in %v, %s, %q output is\r\ndetermined using the EIP-55 checksum. Using %x, %X with Address\r\ndisables checksumming.\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* core,les: headerchain import in batches (#21471)\r\n\r\n* core: add test for headerchain inserts\r\n\r\n* core, light: write headerchains in batches\r\n\r\n* core: change to one callback per batch of inserted headers + review concerns\r\n\r\n* core: error-check on batch write\r\n\r\n* core: unexport writeHeaders\r\n\r\n* core: remove callback parameter in InsertHeaderChain\r\n\r\nThe semantics of InsertHeaderChain are now much simpler: it is now an\r\nall-or-nothing operation. The new WriteStatus return value allows\r\ncallers to check for the canonicality of the insertion. This change\r\nsimplifies use of HeaderChain in package les, where the callback was\r\npreviously used to post chain events.\r\n\r\n* core: skip some hashing when writing headers\r\n\r\n* core: less hashing in header validation\r\n\r\n* core: fix headerchain flaw regarding blacklisted hashes\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* cmd/geth: add test to verify regexps in version check (#21962)\r\n\r\n* crypto/signify, build: fix archive signing with signify (#21977)\r\n\r\nThis fixes some issues in crypto/signify and makes release signing work.\r\n\r\nThe archive signing step in ci.go used getenvBase64, which decodes the key data.\r\nThis is incorrect here because crypto/signify already base64-decodes the key.\r\n\r\n* p2p/enode: avoid crashing for invalid IP (#21981)\r\n\r\nThe database panicked for invalid IPs. This is usually no problem\r\nbecause all code paths leading to node DB access verify the IP, but it's\r\ndangerous because improper validation can turn this panic into a DoS\r\nvulnerability. The quick fix here is to just turn database accesses\r\nusing invalid IP into a noop. This isn't great, but I'm planning to\r\nremove the node DB for discv5 long-term, so it should be fine to have\r\nthis quick fix for half a year.\r\n\r\nFixes #21849\r\n\r\n* les, light: remove untrusted header retrieval in ODR (#21907)\r\n\r\n* les, light: remove untrusted header retrieval in ODR\r\n\r\n* les: polish\r\n\r\n* light: check the hash equality in odr\r\n\r\n* core, trie: speed up some tests with quadratic processing flaw (#21987)\r\n\r\nThis commit fixes a flaw in two testcases, and brings down the exec-time from ~40s to ~8s for trie/TestIncompleteSync.\r\n\r\nThe checkConsistency was performed over and over again on the complete set of nodes, not just the recently added, turning it into a quadratic runtime.\r\n\r\n* les: introduce forkID (#21974)\r\n\r\n* les: introduce forkID\r\n\r\n* les: address comment\r\n\r\n* build: upgrade to Go 1.15.6 (#21986)\r\n\r\n* params: go-ethereum v1.9.25 stable\r\n\r\n* fix: merge\r\n\r\n* fix: review GoQ versions\r\n\r\n* fix: GoQuorum signer\r\n\r\n* fix: state processor, missing err formatting\r\n\r\n* fix: restore tx GoQ modification\r\n\r\n* fix: work with eip155 & psm tests\r\n\r\n* fix: cmd geth tests\r\n\r\n* fix: format (lint)\r\n\r\n* fix: copy default value, don't erase it\r\n\r\n* fix: cache config -> trie Config\r\n\r\n* fix: unit test restored, check another error\r\n\r\n* refactor: remove unused parameters\r\n\r\n* fix: configure with default cache config\r\n\r\n* fix: merge of master\r\n\r\n* go 1.15.6\r\n\r\n* fix: for review\r\n\r\n* revert: unnecessary change\r\n\r\n* fix: remove comment\r\n\r\n* fix: review of variable name\r\n\r\n* fix: use the ChainContext interface\r\nin state_processor to be aligned with geth\r\n\r\n* fix: null pointer\r\n\r\n* fix: don't check nil pointer\r\nbut pass a non nil value\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\nCo-authored-by: Marius van der Wijden <m.vanderwijden@live.de>\r\nCo-authored-by: Nicolas Feignon <nfeignon@gmail.com>\r\nCo-authored-by: Pascal Dierich <pascal@pascaldierich.com>\r\nCo-authored-by: Sad Pencil <sadpencil@outlook.com>\r\nCo-authored-by: Preston Van Loon <preston@prysmaticlabs.com>\r\nCo-authored-by: Péter Szilágyi <peterke@gmail.com>\r\nCo-authored-by: Abd ar-Rahman Hamidi <bakhtiyor.h@gmail.com>\r\nCo-authored-by: gary rong <garyrong0905@gmail.com>\r\nCo-authored-by: wbt <wbt@users.noreply.github.com>\r\nCo-authored-by: ligi <ligi@ligi.de>\r\nCo-authored-by: Felföldi Zsolt <zsfelfoldi@gmail.com>\r\nCo-authored-by: LieutenantRoger <dijsky_2015@hotmail.com>\r\nCo-authored-by: roger <dengjun@huobi.com>\r\nCo-authored-by: Alex Prut <1648497+alexprut@users.noreply.github.com>\r\nCo-authored-by: Antoine Toulme <atoulme@users.noreply.github.com>\r\nCo-authored-by: Nishant Das <nishdas93@gmail.com>\r\nCo-authored-by: Guillaume Ballet <gballet@gmail.com>\r\nCo-authored-by: Kristofer Peterson <svenski123@users.noreply.github.com>\r\nCo-authored-by: Pascal Dierich <pascal@merkleplant.xyz>\r\nCo-authored-by: Chris Ziogas <ziogas_chr@hotmail.com>\r\nCo-authored-by: Steve Ruckdashel <steven.ruckdashel@optum.com>\r\nCo-authored-by: Li, Cheng <lob4tt@gmail.com>\r\nCo-authored-by: Baptiste Boussemart <baptiste.boussemart@consensys.net>\r\nCo-authored-by: baptiste-b-pegasys <85155432+baptiste-b-pegasys@users.noreply.github.com>\r\nCo-authored-by: Ricardo Silva <1945557+ricardolyn@users.noreply.github.com>","tree":{"sha":"c90ec7430360d4e925d4dabfc9885eafd4117de7","url":"https://api.github.com/repos/ConsenSys/quorum/git/trees/c90ec7430360d4e925d4dabfc9885eafd4117de7"},"url":"https://api.github.com/repos/ConsenSys/quorum/git/commits/df651519a53790676dbef401b5f24b1bc0b183da","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhMdrcCRBK7hj4Ov3rIwAAUiwIAKWdLl6tN9IN1D04IdvXOJ+m\n7betV30sYnM4EdDtFvmhV5RPgCcs0KLubbf8VgRIWAt9phAFz34N/MnGbSmY+/MI\nxisgEwjkLkRw5Fb5uP4TrywM2XX4wr3xSFILZfTdJGzg5MqSM9FurOo16tNuvz8f\nb+C1nIJ1fz5bdqn5QfTRKahIbik2k9NWGvkzHtkchCtgHD1tL9RFxU2uXgNilCh1\nL1ihMQR+fN7tuUR0XT8mHYzIlEwMyAUMhZTYlIg/fI8LlFmgsUY1NnBF/qmLoHuk\nl8e33kzLZhiipjlmZzeu218qc8tgTJj1/1nfXX3OS67WctJw3O/4UAVCOncDWww=\n=a6Dj\n-----END PGP SIGNATURE-----\n","payload":"tree c90ec7430360d4e925d4dabfc9885eafd4117de7\nparent 614b212d4f99565acde226dd7c74dfa7d559aee2\nauthor Quorum Bot <46820074+quorumbot@users.noreply.github.com> 1630657244 +0100\ncommitter GitHub <noreply@github.com> 1630657244 +0200\n\n[Upgrade] Go-Ethereum release v1.9.25 (#1223)\n\n* params: begin v1.9.25 release cycle\r\n\r\n* crypto/bn256: improve bn256 fuzzer (#21815)\r\n\r\n* crypto/cloudflare: fix nil deref in random G1/G2 reading\r\n\r\n* crypto/bn256: improve fuzzer\r\n\r\n* crypto/bn256: fix some flaws in fuzzer\r\n\r\n* crypto/bn256: better comments for u, P and Order (#21836)\r\n\r\n* tests/fuzzers: improve the fuzzers (#21829)\r\n\r\n* tests/fuzzers, common/bitutil: make fuzzers use correct returnvalues + remove output\r\n\r\n* tests/fuzzers/stacktrie: fix duplicate-key insertion in stacktrie (false positive)\r\n\r\n* tests/fuzzers/stacktrie: fix compilation error\r\n\r\n* tests/fuzzers: linter nits\r\n\r\n* core/vm, protocol_params: implement eip-2565 modexp repricing (#21607)\r\n\r\n* core/vm, protocol_params: implement eip-2565 modexp repricing\r\n\r\n* core/vm: fix review concerns\r\n\r\n* core, all: split vm.Context into BlockContext and TxContext (#21672)\r\n\r\n* all: core: split vm.Config into BlockConfig and TxConfig\r\n\r\n* core: core/vm: reset EVM between tx in block instead of creating new\r\n\r\n* core/vm: added docs\r\n\r\n* accounts/abi: template: set events Raw field in Parse methods (#21807)\r\n\r\n* common: fix documentation of Address.SetBytes (#21814)\r\n\r\n* crypto/bn256: refine comments according to #19577, #21595, and #21836 (#21847)\r\n\r\n* consensus/ethash: fix usage of *reflect.SliceHeader (#21372)\r\n\r\n* consensus/ethash: only use *reflect.SliceHeader, not reflect.SliceHeader. See comment here: https://github.com/golang/go/issues/40397\\#issuecomment-663748689\r\n\r\n* consensus/ethash: pr feedback from @mdempsky, makes a copy of dest such that is not mutated\r\n\r\n* consensus/ethash: remove noop assign\r\n\r\n* consensus/ethash: apply same fix to another location\r\n\r\nCo-authored-by: Péter Szilágyi <peterke@gmail.com>\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* cmd/geth: remove retesteth\r\n\r\n* crypto/secp256k1: add checking z sign in affineFromJacobian (#18419)\r\n\r\nThe z == 0 check is hit whenever we Add two points with the same x1/x2\r\ncoordinate. crypto/elliptic uses the same check in their affineFromJacobian\r\nfunction. This change does not affect block processing or tx signature verification\r\nin any way, because it does not use the Add or Double methods.\r\n\r\n* cmd/geth: improve les test on windows (#21860)\r\n\r\n* all: disable recording preimage of trie keys (#21402)\r\n\r\n* cmd, core, eth, light, trie: disable recording preimage by default\r\n\r\n* core, eth: fix unit tests\r\n\r\n* core: fix import\r\n\r\n* all: change to nopreimage\r\n\r\n* cmd, core, eth, trie: use cache.preimages flag\r\n\r\n* cmd: enable preimages for archive node\r\n\r\n* cmd/utils, trie: simplify preimage tracking a bit\r\n\r\n* core: fix linter\r\n\r\nCo-authored-by: Péter Szilágyi <peterke@gmail.com>\r\n\r\n* metrics: fix the panic for reading empty cpu stats (#21864)\r\n\r\n* node: support expressive origin rules in ws.origins (#21481)\r\n\r\n* Only compare hostnames in ws.origins\r\n\r\nAlso using a helper function for ToLower consolidates all preparation steps in one function for more maintainable consistency.\r\n\r\nSpaces => tabs\r\n\r\nRemove a semicolon\r\n\r\nAdd space at start of comment\r\n\r\nRemove parens around conditional\r\n\r\nHandle case wehre parsed hostname is empty\r\n\r\nWhen passing a single word like \"localhost\" the parsed hostname is an empty string. Handle this and the error-parsing case together as default, and the nonempty hostname case in the conditional.\r\n\r\nRefactor with new originIsAllowed functions\r\n\r\nAdds originIsAllowed() & ruleAllowsOrigin(); removes prepOriginForComparison\r\n\r\nRemove blank line\r\n\r\nAdded tests for simple allowed-orign rule\r\n\r\nwhich does not specify a protocol or port, just a hostname\r\n\r\nFix copy-paste: `:=` => `=`\r\n\r\nRemove parens around conditional\r\n\r\nRemove autoadded whitespace on blank lines\r\n\r\nCompare scheme, hostname, and port with rule\r\n\r\nif the rule specifies those portions.\r\n\r\nRemove one autoadded trailing whitespace\r\n\r\nBetter handle case where only origin host is given\r\n\r\ne.g. \"localhost\"\r\n\r\nRemove parens around conditional\r\n\r\nRefactor: attemptWebsocketConnectionFromOrigin DRY\r\n\r\nInclude return type on helper function\r\n\r\nProvide srv obj in helper fn\r\n\r\nProvide srv to helper fn\r\n\r\nRemove stray underscore\r\n\r\nRemove blank line\r\n\r\nparent 93e666b4c1e7e49b8406dc83ed93f4a02ea49ac1\r\nauthor wbt <wbt@users.noreply.github.com> 1598559718 -0400\r\ncommitter Martin Holst Swende <martin@swende.se> 1605602257 +0100\r\ngpgsig -----BEGIN PGP SIGNATURE-----\r\n\r\n iQFFBAABCAAvFiEEypmrtbNuJK1doP1AaDtDjAWl3fAFAl+zi9ARHG1hcnRpbkBz\r\n d2VuZGUuc2UACgkQaDtDjAWl3fDRiwgAoMtzU8dwRV7Q9xkCwWEx9Wz2f3n6jUr2\r\n VWBycDKGKwRkPPOER3oc9kzjGU/P1tFlK07PjfnAKZ9KWzxpDcJZwYM3xCBurG7A\r\n 16y4YsQnzgPNONv3xIkdi3RZtDBIiPFFEmdZFFvZ/jKexfI6JIYPngCAoqdTIFb9\r\n On/aPvvVWQn1ExfmarsvvJ7kUDUG77tZipuacEH5FfFsfelBWOEYPe+I9ToUHskv\r\n +qO6rOkV1Ojk8eBc6o0R1PnApwCAlEhJs7aM/SEOg4B4ZJJneiFuEXBIG9+0yS2I\r\n NOicuDPLGucOB5nBsfIKI3USPeE+3jxdT8go2lN5Nrhm6MimoILDsQ==\r\n =sgUp\r\n -----END PGP SIGNATURE-----\r\n\r\nRefactor: drop err var for more concise test lines\r\n\r\nAdd several tests for new WebSocket origin checks\r\n\r\nRemove autoadded whitespace on blank lines\r\n\r\nRestore TestWebsocketOrigins originally-named test\r\n\r\nand rename the others to be helpers rather than full tests\r\n\r\nRemove autoadded whitespace on blank line\r\n\r\nTemporarily comment out new test sets\r\n\r\nUncomment test around origin rule with scheme\r\n\r\nRemove tests without scheme on browser origin\r\n\r\nper https://github.com/ethereum/go-ethereum/pull/21481/files#r479371498\r\n\r\nUncomment tests with port; remove some blank lines\r\n\r\nHandle when browser does not specify scheme/port\r\n\r\nUncomment test for including scheme & port in rule\r\n\r\nAdd IP tests\r\n\r\n* node: more tests + table-driven, ws origin changes\r\n\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* trie, rpc, cmd/geth: fix tests on 32-bit and windows + minor rpc fixes (#21871)\r\n\r\n* trie: fix tests to work on 32-bit systems\r\n\r\n* les: make test work on 32-bit platform\r\n\r\n* cmd/geth: fix windows-issues on tests\r\n\r\n* trie: improve balance\r\n\r\n* cmd/geth: make account tests less verbose + less mem intense\r\n\r\n* rpc: make debug-level log output less verbose\r\n\r\n* cmd/geth: lint\r\n\r\n* crypto/bn256: fix bn256Mul fuzzer to not hang on large input (#21872)\r\n\r\n* crypto/bn256: fix bn256Mul fuzzer to not hang on large input\r\n\r\n* Update crypto/bn256/bn256_fuzz.go\r\n\r\nCo-authored-by: ligi <ligi@ligi.de>\r\n\r\nCo-authored-by: ligi <ligi@ligi.de>\r\n\r\n* p2p: avoid spinning loop on out-of-handles (#21878)\r\n\r\n* p2p: avoid busy-loop on temporary errors\r\n\r\n* p2p: address review concerns\r\n\r\n* les/utils: protect against WeightedRandomSelect overflow (#21839)\r\n\r\nAlso fixes a bug in les/flowcontrol that caused the overflow.\r\n\r\n* github: Add new style of issue-templates\r\n\r\ncloses #20024\r\n\r\n* tests/fuzzers/bls1381: add bls fuzzer (#21796)\r\n\r\n* added bls fuzzer\r\n\r\n* crypto/bls12381: revert bls-changes, fixup fuzzer tests\r\n\r\n* fuzzers: split bls fuzzing into 8 different units\r\n\r\n* fuzzers/bls: remove (now stale) corpus\r\n\r\n* crypto/bls12381: added blsfuzz corpus\r\n\r\n* fuzzers/bls12381: fix the bls corpus\r\n\r\n* fuzzers: fix oss-fuzz script\r\n\r\n* tests/fuzzers: fixups on bls corpus\r\n\r\n* test/fuzzers: remove leftover corpus\r\n\r\nCo-authored-by: Marius van der Wijden <m.vanderwijden@live.de>\r\n\r\n* cmd/faucet: improve handling of facebook post url (#21838)\r\n\r\nResolves #21532\r\n\r\nCo-authored-by: roger <dengjun@huobi.com>\r\n\r\n* les: fix GetProofsV2 bug (#21896)\r\n\r\n* github: Remove vulnerability.md (#21894)\r\n\r\nThis type is automatically offered by github after changing to the new style and a security.md being present\r\n\r\n* cmd/devp2p/internal/ethtest: add 'large announcement' tests (#21792)\r\n\r\n* cmd/devp2p/internal/ethtest: added large announcement tests\r\n\r\n* cmd/devp2p/internal/ethtest: added large announcement tests\r\n\r\n* cmd/devp2p/internal/ethtest: refactored stuff a bit\r\n\r\n* cmd/devp2p/internal/ethtest: added TestMaliciousStatus/Handshake\r\n\r\n* cmd/devp2p/internal/ethtest: fixed rebasing issue\r\n\r\n* happy linter, happy life\r\n\r\n* cmd/devp2p/internal/ethtest: used readAndServe\r\n\r\n* stuff\r\n\r\n* cmd/devp2p/internal/ethtest: fixed test cases\r\n\r\n* core/types: fixed typo (#21897)\r\n\r\n* all: simplify nested complexity and if blocks ending with a return statement (#21854)\r\n\r\nChanges:\r\n\r\n    Simplify nested complexity\r\n    If an if blocks ends with a return statement then remove the else nesting.\r\n\r\nMost of the changes has also been reported in golint https://goreportcard.com/report/github.com/ethereum/go-ethereum#golint\r\n\r\n* graphql: always return 400 if errors are present in the response (#21882)\r\n\r\n* Make sure to return 400 when errors are present in the response\r\n\r\n* graphql: use less memory in chainconfig for tests\r\n\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* all: remove redundant conversions and import names (#21903)\r\n\r\n* p2p/discover: fix deadlock in discv5 message dispatch (#21858)\r\n\r\nThis fixes a deadlock that could occur when a response packet arrived\r\nafter a call had already received enough responses and was about to\r\nsignal completion to the dispatch loop.\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* crypto: signing builds with signify/minisign (#21798)\r\n\r\n* internal/build: implement signify's signing func\r\n* Add signify to the ci utility\r\n* fix output file format\r\n* Add unit test for signify\r\n* holiman's + travis' feedback\r\n* internal/build: verify signify's output\r\n* crypto: move signify to common dir\r\n* use go-minisign to verify binaries\r\n* more holiman feedback\r\n* crypto, ci: support minisign output\r\n* only accept one-line trusted comments\r\n* configurable untrusted comments\r\n* code cleanup in tests\r\n* revert to use ed25519 from the stdlib\r\n* bug: fix for empty untrusted comments\r\n* write timestamp as comment if trusted comment isn't present\r\n* rename line checker to commentHasManyLines\r\n* crypto: added signify fuzzer (#6)\r\n* crypto: added signify fuzzer\r\n* stuff\r\n* crypto: updated signify fuzzer to fuzz comments\r\n* crypto: repro signify crashes\r\n* rebased fuzzer on build-signify branch\r\n* hide fuzzer behind gofuzz build flag\r\n* extract key data inside a single function\r\n* don't treat \\r as a newline\r\n* travis: fix signing command line\r\n* do not use an external binary in tests\r\n* crypto: move signify to crypto/signify\r\n* travis: fix formatting issue\r\n* ci: fix linter build after package move\r\n\r\nCo-authored-by: Marius van der Wijden <m.vanderwijden@live.de>\r\n\r\n* accounts, signer: fix Ledger Live account derivation path (clef) (#21757)\r\n\r\n* signer/core/api: fix derivation of ledger live accounts\r\n\r\nFor ledger hardware wallets, change account iteration as follows:\r\n\r\n- ledger legacy: m/44'/60'/0'/X; for 0<=X<5\r\n- ledger live: m/44'/60'/0'/0/X; for 0<=X<5\r\n\r\n- ledger legacy: m/44'/60'/0'/X; for 0<=X<10\r\n- ledger live: m/44'/60'/X'/0/0; for 0<=X<10\r\n\r\nNon-ledger derivation is unchanged and remains as:\r\n- non-ledger: m/44'/60'/0'/0/X; for 0<=X<10\r\n\r\n* signer/core/api: derive ten default paths for all hardware wallets, plus ten legacy and ten live paths for ledger wallets\r\n\r\n* signer/core/api: as .../0'/0/0 already included by default paths, do not include it again with ledger live paths\r\n\r\n* accounts, signer: implement path iterators for hd wallets\r\n\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\n\r\n* accounts/keystore: add missing function doc for SignText (#21914)\r\n\r\nCo-authored-by: Pascal Dierich <pascal@pascaldierich.com>\r\n\r\n* cmd/geth: make tests run quicker + use less memory and disk (#21919)\r\n\r\n* cmd/devp2p/internal/ethtest: add transaction tests (#21857)\r\n\r\n* p2p/nodestate: fix deadlock during shutdown of les server (#21927)\r\n\r\nThis PR fixes a deadlock reported here: #21925\r\n\r\nThe cause is that many operations may be pending, but if the close happens, only one of them gets awoken and exits, the others remain waiting for a signal that never comes.\r\n\r\n* les: fix nodiscover option (#21906)\r\n\r\n* params: update CHTs (#21941)\r\n\r\n* eth: fix error in tracing if reexec is set (#21830)\r\n\r\n* eth: fix error in tracing if reexec is set\r\n\r\n* eth: change pointer embedding to value-embedding\r\n\r\n* go.mod: update github.com/golang/snappy(#21934)\r\n\r\nThis updates the snappy library depency to include a fix for\r\na Go 1.16 incompatibility issue.\r\n\r\n* cmd/devp2p: add node filter for snap + fix arg error (#21950)\r\n\r\n* core/vm/runtime: remove duplicated line (#21956)\r\n\r\n\r\nThis line is duplicated, though it doesn't cause any issues.\r\n\r\n* core: improve contextual information on core errors (#21869)\r\n\r\nA lot of times when we hit 'core' errors, example: invalid tx, the information provided is\r\ninsufficient. We miss several pieces of information: what account has nonce too high,\r\nand what transaction in that block was offending?\r\n\r\nThis PR adds that information, using the new type of wrapped errors.\r\nIt also adds a testcase which (partly) verifies the output from the errors.\r\n\r\nThe first commit changes all usage of direct equality-checks on core errors, into\r\nusing errors.Is. The second commit adds contextual information. This wraps most\r\nof the core errors with more information, and also wraps it one more time in\r\nstateprocessor, to further provide tx index and tx hash, if such a tx is encoutered in\r\na block. The third commit uses the chainmaker to try to generate chains with such\r\nerrors in them, thus triggering the errors and checking that the generated string meets\r\nexpectations.\r\n\r\n* cmd/geth: implement vulnerability check (#21859)\r\n\r\n* cmd/geth: implement vulnerability check\r\n\r\n* cmd/geth: use minisign to verify vulnerability feed\r\n\r\n* cmd/geth: add the test too\r\n\r\n* cmd/geth: more minisig/signify testing\r\n\r\n* cmd/geth: support multiple pubfiles for signing\r\n\r\n* cmd/geth: add @holiman minisig pubkey\r\n\r\n* cmd/geth: polishes on vulnerability check\r\n\r\n* cmd/geth: fix ineffassign linter nit\r\n\r\n* cmd/geth: add CVE to version check struct\r\n\r\n* cmd/geth/testdata: add missing testfile\r\n\r\n* cmd/geth: add more keys to versionchecker\r\n\r\n* cmd/geth: support file:// URLs in version check\r\n\r\n* cmd/geth: improve key ID printing when signature check fails\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* les: cosmetic rewrite of the arm64 float bug workaround (#21960)\r\n\r\n* les: revert arm float bug workaround to check go 1.15\r\n\r\n* add traces to reproduce outside travis\r\n\r\n* simpler workaround\r\n\r\n* crypto/secp256k1: add workaround for go mod vendor (#21735)\r\n\r\nGo won't vendor C files if there are no Go files present in the directory.\r\nWorkaround is to add dummy Go files.\r\n\r\nFixes: #20232\r\n\r\n* accounts/abi/bind: allow specifying signer on transactOpts (#21356)\r\n\r\nThis commit enables users to specify which signer they want to use while creating their transactOpts.\r\nPreviously all contract interactions used the homestead signer. Now a user can specify whether they\r\nwant to sign with homestead or EIP155 and specify the chainID which adds another layer of security.\r\n\r\nCloses #16484\r\n\r\n* common: improve printing of Hash and Address (#21834)\r\n\r\nBoth Hash and Address have a String method, which returns the value as\r\nhex with 0x prefix. They also had a Format method which tried to print\r\nthe value using printf of []byte. The way Format worked was at odds with\r\nString though, leading to a situation where fmt.Sprintf(\"%v\", hash)\r\nreturned the decimal notation and hash.String() returned a hex string.\r\n\r\nThis commit makes it consistent again. Both types now support the %v,\r\n%s, %q format verbs for 0x-prefixed hex output. %x, %X creates\r\nunprefixed hex output. %d is also supported and returns the decimal\r\nnotation \"[1 2 3...]\".\r\n\r\nFor Address, the case of hex characters in %v, %s, %q output is\r\ndetermined using the EIP-55 checksum. Using %x, %X with Address\r\ndisables checksumming.\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* core,les: headerchain import in batches (#21471)\r\n\r\n* core: add test for headerchain inserts\r\n\r\n* core, light: write headerchains in batches\r\n\r\n* core: change to one callback per batch of inserted headers + review concerns\r\n\r\n* core: error-check on batch write\r\n\r\n* core: unexport writeHeaders\r\n\r\n* core: remove callback parameter in InsertHeaderChain\r\n\r\nThe semantics of InsertHeaderChain are now much simpler: it is now an\r\nall-or-nothing operation. The new WriteStatus return value allows\r\ncallers to check for the canonicality of the insertion. This change\r\nsimplifies use of HeaderChain in package les, where the callback was\r\npreviously used to post chain events.\r\n\r\n* core: skip some hashing when writing headers\r\n\r\n* core: less hashing in header validation\r\n\r\n* core: fix headerchain flaw regarding blacklisted hashes\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\n\r\n* cmd/geth: add test to verify regexps in version check (#21962)\r\n\r\n* crypto/signify, build: fix archive signing with signify (#21977)\r\n\r\nThis fixes some issues in crypto/signify and makes release signing work.\r\n\r\nThe archive signing step in ci.go used getenvBase64, which decodes the key data.\r\nThis is incorrect here because crypto/signify already base64-decodes the key.\r\n\r\n* p2p/enode: avoid crashing for invalid IP (#21981)\r\n\r\nThe database panicked for invalid IPs. This is usually no problem\r\nbecause all code paths leading to node DB access verify the IP, but it's\r\ndangerous because improper validation can turn this panic into a DoS\r\nvulnerability. The quick fix here is to just turn database accesses\r\nusing invalid IP into a noop. This isn't great, but I'm planning to\r\nremove the node DB for discv5 long-term, so it should be fine to have\r\nthis quick fix for half a year.\r\n\r\nFixes #21849\r\n\r\n* les, light: remove untrusted header retrieval in ODR (#21907)\r\n\r\n* les, light: remove untrusted header retrieval in ODR\r\n\r\n* les: polish\r\n\r\n* light: check the hash equality in odr\r\n\r\n* core, trie: speed up some tests with quadratic processing flaw (#21987)\r\n\r\nThis commit fixes a flaw in two testcases, and brings down the exec-time from ~40s to ~8s for trie/TestIncompleteSync.\r\n\r\nThe checkConsistency was performed over and over again on the complete set of nodes, not just the recently added, turning it into a quadratic runtime.\r\n\r\n* les: introduce forkID (#21974)\r\n\r\n* les: introduce forkID\r\n\r\n* les: address comment\r\n\r\n* build: upgrade to Go 1.15.6 (#21986)\r\n\r\n* params: go-ethereum v1.9.25 stable\r\n\r\n* fix: merge\r\n\r\n* fix: review GoQ versions\r\n\r\n* fix: GoQuorum signer\r\n\r\n* fix: state processor, missing err formatting\r\n\r\n* fix: restore tx GoQ modification\r\n\r\n* fix: work with eip155 & psm tests\r\n\r\n* fix: cmd geth tests\r\n\r\n* fix: format (lint)\r\n\r\n* fix: copy default value, don't erase it\r\n\r\n* fix: cache config -> trie Config\r\n\r\n* fix: unit test restored, check another error\r\n\r\n* refactor: remove unused parameters\r\n\r\n* fix: configure with default cache config\r\n\r\n* fix: merge of master\r\n\r\n* go 1.15.6\r\n\r\n* fix: for review\r\n\r\n* revert: unnecessary change\r\n\r\n* fix: remove comment\r\n\r\n* fix: review of variable name\r\n\r\n* fix: use the ChainContext interface\r\nin state_processor to be aligned with geth\r\n\r\n* fix: null pointer\r\n\r\n* fix: don't check nil pointer\r\nbut pass a non nil value\r\n\r\nCo-authored-by: Felix Lange <fjl@twurst.com>\r\nCo-authored-by: Martin Holst Swende <martin@swende.se>\r\nCo-authored-by: Marius van der Wijden <m.vanderwijden@live.de>\r\nCo-authored-by: Nicolas Feignon <nfeignon@gmail.com>\r\nCo-authored-by: Pascal Dierich <pascal@pascaldierich.com>\r\nCo-authored-by: Sad Pencil <sadpencil@outlook.com>\r\nCo-authored-by: Preston Van Loon <preston@prysmaticlabs.com>\r\nCo-authored-by: Péter Szilágyi <peterke@gmail.com>\r\nCo-authored-by: Abd ar-Rahman Hamidi <bakhtiyor.h@gmail.com>\r\nCo-authored-by: gary rong <garyrong0905@gmail.com>\r\nCo-authored-by: wbt <wbt@users.noreply.github.com>\r\nCo-authored-by: ligi <ligi@ligi.de>\r\nCo-authored-by: Felföldi Zsolt <zsfelfoldi@gmail.com>\r\nCo-authored-by: LieutenantRoger <dijsky_2015@hotmail.com>\r\nCo-authored-by: roger <dengjun@huobi.com>\r\nCo-authored-by: Alex Prut <1648497+alexprut@users.noreply.github.com>\r\nCo-authored-by: Antoine Toulme <atoulme@users.noreply.github.com>\r\nCo-authored-by: Nishant Das <nishdas93@gmail.com>\r\nCo-authored-by: Guillaume Ballet <gballet@gmail.com>\r\nCo-authored-by: Kristofer Peterson <svenski123@users.noreply.github.com>\r\nCo-authored-by: Pascal Dierich <pascal@merkleplant.xyz>\r\nCo-authored-by: Chris Ziogas <ziogas_chr@hotmail.com>\r\nCo-authored-by: Steve Ruckdashel <steven.ruckdashel@optum.com>\r\nCo-authored-by: Li, Cheng <lob4tt@gmail.com>\r\nCo-authored-by: Baptiste Boussemart <baptiste.boussemart@consensys.net>\r\nCo-authored-by: baptiste-b-pegasys <85155432+baptiste-b-pegasys@users.noreply.github.com>\r\nCo-authored-by: Ricardo Silva <1945557+ricardolyn@users.noreply.github.com>"}},"url":"https://api.github.com/repos/ConsenSys/quorum/commits/df651519a53790676dbef401b5f24b1bc0b183da","html_url":"https://github.com/ConsenSys/quorum/commit/df651519a53790676dbef401b5f24b1bc0b183da","comments_url":"https://api.github.com/repos/ConsenSys/quorum/commits/df651519a53790676dbef401b5f24b1bc0b183da/comments","author":{"login":"quorumbot","id":46820074,"node_id":"MDQ6VXNlcjQ2ODIwMDc0","avatar_url":"https://avatars.githubusercontent.com/u/46820074?v=4","gravatar_id":"","url":"https://api.github.com/users/quorumbot","html_url":"https://github.com/quorumbot","followers_url":"https://api.github.com/users/quorumbot/followers","following_url":"https://api.github.com/users/quorumbot/following{/other_user}","gists_url":"https://api.github.com/users/quorumbot/gists{/gist_id}","starred_url":"https://api.github.com/users/quorumbot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/quorumbot/subscriptions","organizations_url":"https://api.github.com/users/quorumbot/orgs","repos_url":"https://api.github.com/users/quorumbot/repos","events_url":"https://api.github.com/users/quorumbot/events{/privacy}","received_events_url":"https://api.github.com/users/quorumbot/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"614b212d4f99565acde226dd7c74dfa7d559aee2","url":"https://api.github.com/repos/ConsenSys/quorum/commits/614b212d4f99565acde226dd7c74dfa7d559aee2","html_url":"https://github.com/ConsenSys/quorum/commit/614b212d4f99565acde226dd7c74dfa7d559aee2"}]}]