[{"sha":"6b35f59b9c5bc85fe84b2bd16e653e0369d92d81","node_id":"MDY6Q29tbWl0NTA3NzkzNTg6NmIzNWY1OWI5YzViYzg1ZmU4NGIyYmQxNmU2NTNlMDM2OWQ5MmQ4MQ==","commit":{"author":{"name":"Vitor Baptista","email":"vitor@vitorbaptista.com","date":"2017-04-11T16:56:00Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2017-04-11T16:56:00Z"},"message":"[#661] Deduplicate trials via public_title\n\nThis commit implements deduplicating trial via `public_title` if we couldn't\r\nfind a trial via `identifiers`.\r\n\r\n# Trial deduplication process\r\n\r\nThe actual process is implemented in the `helpers.find_trial()` method as:\r\n\r\n1. Search a record (other than the actual record) with an identifier in common. If found, return its trial.\r\n2. Search a record (other than the actual record) from a different source with the same `public_title`. If found, return its trial.\r\n3. If not found and we're ignoring the actual record, try again including all records in our DB.\r\n\r\nWe always search in the `records` table, as we have information there on all\r\ntrials from all sources, not only the ones we consider primary.\r\n\r\nA tricky question is why we ignore the actual `record` when searching for a\r\ntrial. Remember that we can process the same trial and record multiple times, so\r\nthey could already be in the DB. If we don't ignore at first the current record\r\nbeing processed, we're guaranteed to always find a trial when updating data: the\r\none created from the current record. That might not be the best choice, though.\r\nLet's see an example. Consider that our DB looks like:\r\n\r\n* Records\r\n| record_id | trial_id | ... |\r\n| --------- | -------- | --- |\r\n| A         | X        | ... |\r\n| B         | Y        | ... |\r\n\r\n* Trials\r\n| trial_id | ... |\r\n| -------- | --- |\r\n| X        | ... |\r\n| Y        | ... |\r\n\r\nIf we don't ignore record `A` at first, the `.find_trial()` will always return\r\nits trial (id `X`), as it'll have the same identifiers as what we're looking\r\nfor. But what if record `B` also has the same identifiers? Doesn't matter: we\r\nwould never return its trial, as we check record `A` first. For argument's sake,\r\nI'm assuming that the results are sorted by id, as the point is that there\r\nexists a sorting order that results in a non-optimal deduplication (and that we\r\ncan't fix it 100% by just changing the sorting order).\r\n\r\nTo avoid this, the first pass on the deduplication algorithm ignores the current\r\nrecord we're looking for. If we can't find a trial apart from the current\r\nrecord, we try again considering it as well.\r\n\r\nWe also keep a log of the trial deduplication process for debugging purposes.\r\nThe `.find_trial()` method returns which method was used to find the trial, and\r\nthe trial writer writes a row in a `trial_deduplication_logs` table containing\r\nthe trial ID, record ID, deduplication method and the code's commit hash.\r\n\r\nTo get the commit hash, we needed to change how we build the Docker images.\r\nInstead of using the automatic builds from Docker Hub, we use Travis to build\r\nit, passing the git commit hash as the env variable `SOURCE_COMMIT`. With this,\r\nwe can access the hash using `os.environ['SOURCE_COMMIT']`.\r\n\r\n# General improvements\r\n\r\nThere were a few improvements to the code. The biggest one was renaming\r\n`writers.write_trial()` to `writers.write_trial_and_record()`, as we\r\nalways want to write the record as we write a trial. Because of this,\r\n`writers.write_record()` was removed.\r\n\r\nFixes opentrials/opentrials#661","tree":{"sha":"09f9105aea5cbe9642bad39a15876a65c48a009e","url":"https://api.github.com/repos/opentrials/processors/git/trees/09f9105aea5cbe9642bad39a15876a65c48a009e"},"url":"https://api.github.com/repos/opentrials/processors/git/commits/6b35f59b9c5bc85fe84b2bd16e653e0369d92d81","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/opentrials/processors/commits/6b35f59b9c5bc85fe84b2bd16e653e0369d92d81","html_url":"https://github.com/opentrials/processors/commit/6b35f59b9c5bc85fe84b2bd16e653e0369d92d81","comments_url":"https://api.github.com/repos/opentrials/processors/commits/6b35f59b9c5bc85fe84b2bd16e653e0369d92d81/comments","author":{"login":"vitorbaptista","id":76945,"node_id":"MDQ6VXNlcjc2OTQ1","avatar_url":"https://avatars.githubusercontent.com/u/76945?v=4","gravatar_id":"","url":"https://api.github.com/users/vitorbaptista","html_url":"https://github.com/vitorbaptista","followers_url":"https://api.github.com/users/vitorbaptista/followers","following_url":"https://api.github.com/users/vitorbaptista/following{/other_user}","gists_url":"https://api.github.com/users/vitorbaptista/gists{/gist_id}","starred_url":"https://api.github.com/users/vitorbaptista/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vitorbaptista/subscriptions","organizations_url":"https://api.github.com/users/vitorbaptista/orgs","repos_url":"https://api.github.com/users/vitorbaptista/repos","events_url":"https://api.github.com/users/vitorbaptista/events{/privacy}","received_events_url":"https://api.github.com/users/vitorbaptista/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"2dadd48f3aa1bd6a6837339fdd174bbf91d645f0","url":"https://api.github.com/repos/opentrials/processors/commits/2dadd48f3aa1bd6a6837339fdd174bbf91d645f0","html_url":"https://github.com/opentrials/processors/commit/2dadd48f3aa1bd6a6837339fdd174bbf91d645f0"}]}]